<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_camera_8cpp" kind="file">
    <compoundname>Camera.cpp</compoundname>
    <includes refid="_camera_8h" local="yes">Camera.h</includes>
    <includes local="yes">ngl/Util.h</includes>
    <includes local="no">ctime</includes>
    <incdepgraph>
      <node id="1511">
        <label>ngl/Util.h</label>
      </node>
      <node id="1507">
        <label>BulletDebugDraw.h</label>
        <link refid="_bullet_debug_draw_8h"/>
        <childnode refid="1508" relation="include">
        </childnode>
        <childnode refid="1509" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
      </node>
      <node id="1504">
        <label>ngl/Obj.h</label>
      </node>
      <node id="1498">
        <label>Camera.cpp</label>
        <link refid="Camera.cpp"/>
        <childnode refid="1499" relation="include">
        </childnode>
        <childnode refid="1511" relation="include">
        </childnode>
        <childnode refid="1512" relation="include">
        </childnode>
      </node>
      <node id="1512">
        <label>ctime</label>
      </node>
      <node id="1509">
        <label>vector</label>
      </node>
      <node id="1503">
        <label>ngl/Mat4.h</label>
      </node>
      <node id="1499">
        <label>Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="1500" relation="include">
        </childnode>
        <childnode refid="1510" relation="include">
        </childnode>
      </node>
      <node id="1501">
        <label>btBulletDynamicsCommon.h</label>
      </node>
      <node id="1508">
        <label>LinearMath/btIDebugDraw.h</label>
      </node>
      <node id="1506">
        <label>set</label>
      </node>
      <node id="1502">
        <label>ngl/Vec3.h</label>
      </node>
      <node id="1510">
        <label>ngl/Camera.h</label>
      </node>
      <node id="1505">
        <label>memory</label>
      </node>
      <node id="1500">
        <label>PhysicsWorld.h</label>
        <link refid="_physics_world_8h"/>
        <childnode refid="1501" relation="include">
        </childnode>
        <childnode refid="1502" relation="include">
        </childnode>
        <childnode refid="1503" relation="include">
        </childnode>
        <childnode refid="1504" relation="include">
        </childnode>
        <childnode refid="1505" relation="include">
        </childnode>
        <childnode refid="1506" relation="include">
        </childnode>
        <childnode refid="1507" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_camera_8h" kindref="compound">Camera.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ngl/Util.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_camera_1af0c271467c41064642beb2f1d28ef5d6" refkind="member"><highlight class="normal"><ref refid="class_camera_1af0c271467c41064642beb2f1d28ef5d6" kindref="member">Camera::Camera</ref>(<ref refid="class_physics_world" kindref="compound">PhysicsWorld</ref><sp/>*_physics)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1ae0462f3e9b30983eed14c39c892ffe0f" kindref="member">m_camDistance</ref><sp/>=<sp/>15.0;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>=<sp/>10;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref><sp/>=<sp/>_physics;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>from(1,0,0);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>to(0,0,0);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>up(0,1,0);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>load<sp/>to<sp/>our<sp/>new<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Camera(from,to,up);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>shape<sp/>using<sp/>FOV<sp/>45<sp/>Aspect<sp/>Ratio<sp/>based<sp/>on<sp/>Width<sp/>and<sp/>Height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>final<sp/>two<sp/>are<sp/>near<sp/>and<sp/>far<sp/>clipping<sp/>planes<sp/>of<sp/>0.5<sp/>and<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;setShape(60,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)720.0/576.0,0.05,350);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>=<sp/><ref refid="class_camera_1ae0462f3e9b30983eed14c39c892ffe0f" kindref="member">m_camDistance</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_camera_1ad1897942d0ccf91052386388a497349f" refkind="member"><highlight class="normal"><ref refid="class_camera_1ad1897942d0ccf91052386388a497349f" kindref="member">Camera::~Camera</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_camera_1ab65565a0e02bd33806d264c972ed083d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1ab65565a0e02bd33806d264c972ed083d" kindref="member">Camera::updatePos</ref>(std::string<sp/>_name)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>camera&apos;s<sp/>position<sp/>based<sp/>on<sp/>a<sp/>horizontal<sp/>circle<sp/>around<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref><sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1ab00e4b94b999ddf53a637e4a999959ee" kindref="member">getLinVelocity</ref>(_name);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>centre(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(_name));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>result(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>a<sp/>=<sp/>centre.toVec3();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>p_out;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>p(eye.m_x,<sp/>eye.m_y<sp/>-<sp/>2<sp/>,eye.m_z);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>vel<sp/>=<sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Ray<sp/>test<sp/>to<sp/>see<sp/>if<sp/>the<sp/>camera<sp/>can<sp/>see<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1aa5c4661e5ac86c996bd4e8f66f39e980" kindref="member">rayTest</ref>(a,<sp/>p,<sp/>p_out))</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>bring<sp/>the<sp/>camera<sp/>to<sp/>a<sp/>point<sp/>above<sp/>the<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>&gt;=<sp/>1.3)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>-=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>+=<sp/>0.2*vel.length();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ngl::Vec4(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>ngl::Vec4(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>there<sp/>is<sp/>a<sp/>line<sp/>of<sp/>sight,<sp/>move<sp/>the<sp/>camera<sp/>back<sp/>to<sp/>the<sp/>usual<sp/>position.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary<sp/>result<sp/>is<sp/>calculated<sp/>but<sp/>not<sp/>set<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec4<sp/>tempResult(centre.m_x<sp/>+<sp/>(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>+0.1*vel.length())<sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>-0.1*vel.length(),(centre.m_z<sp/>+<sp/>(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>+0.1)<sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>ngl::Vec3(tempResult.m_x,<sp/>tempResult.m_y<sp/>-<sp/>2<sp/>,tempResult.m_z);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>no<sp/>obstructions<sp/>between<sp/>the<sp/>temporary<sp/>result<sp/>and<sp/>the<sp/>object,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>it<sp/>as<sp/>the<sp/>actual<sp/>result<sp/>and<sp/>change<sp/>the<sp/>distance<sp/>and<sp/>height<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1aa5c4661e5ac86c996bd4e8f66f39e980" kindref="member">rayTest</ref>(a,<sp/>p)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>&lt;<sp/><ref refid="class_camera_1ae0462f3e9b30983eed14c39c892ffe0f" kindref="member">m_camDistance</ref>)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>+=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ngl::Vec3(tempResult.m_x,tempResult.m_y+2,tempResult.m_z);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>ngl::Vec4(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>&gt;<sp/>10)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>-=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>camera&apos;s<sp/>ideal<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>=<sp/>result.toVec3();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>accelerate<sp/>the<sp/>camera&apos;s<sp/>collision<sp/>sphere<sp/>towards<sp/>the<sp/>ideal<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>velocity<sp/>=<sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>-<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>velocity<sp/>*=<sp/>4;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a73a5f631224e1486c7d6343f0a148ac0" kindref="member">setLinVelocity</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,velocity);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>eye<sp/>inside<sp/>the<sp/>collision<sp/>sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setEye(eye);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>focus<sp/>position<sp/>and<sp/>add<sp/>the<sp/>velocity<sp/>to<sp/>compensate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setLook(centre);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;moveLook(<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[0]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[1]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[2]/60.0f);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_camera_1abd7aa4cdc35c9c95203090bbd4a8279a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1abd7aa4cdc35c9c95203090bbd4a8279a" kindref="member">Camera::snapPos</ref>(std::string<sp/>_name)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>camera&apos;s<sp/>position<sp/>as<sp/>usual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref><sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1ab00e4b94b999ddf53a637e4a999959ee" kindref="member">getLinVelocity</ref>(_name);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>centre(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(_name));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>result(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>dir.normalize();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>dir.m_y=0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>=<sp/>result.toVec3();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//recreate<sp/>the<sp/>camera&apos;s<sp/>collision<sp/>sphere<sp/>to<sp/>hard<sp/>reset<sp/>its<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a7195c3626fb4be06217660c8a8038ffe" kindref="member">removeCollisionObj</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a416466367496b5525a6e676ef1e9d1a3" kindref="member">addSphere</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>result.toVec3(),<sp/>0.5,<sp/>ngl::Vec3(0,0,0),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1af0f1309e7a7e9c47763248e5772b5230" kindref="member">setGravityForBody</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>eye<sp/>and<sp/>look<sp/>as<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setEye(eye);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setLook(centre);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;moveLook(<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[0]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[1]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[2]/60.0f);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_camera_1af3f5d3af4dcd53c997630c45c108729b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1abd7aa4cdc35c9c95203090bbd4a8279a" kindref="member">Camera::snapPos</ref>(std::string<sp/>_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_angle)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>camera&apos;s<sp/>position<sp/>as<sp/>usual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref><sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1ab00e4b94b999ddf53a637e4a999959ee" kindref="member">getLinVelocity</ref>(_name);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>camera<sp/>angle<sp/>to<sp/>specified<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref><sp/>=<sp/>_angle;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>centre(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(_name));</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>result(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>dir.normalize();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>dir.m_y=0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>=<sp/>result.toVec3();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a7195c3626fb4be06217660c8a8038ffe" kindref="member">removeCollisionObj</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a416466367496b5525a6e676ef1e9d1a3" kindref="member">addSphere</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>result.toVec3(),<sp/>0.5,<sp/>ngl::Vec3(0,0,0),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1af0f1309e7a7e9c47763248e5772b5230" kindref="member">setGravityForBody</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setEye(eye);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setLook(centre);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;moveLook(<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[0]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[1]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[2]/60.0f);</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_camera_1a7c68c706aa05e265b14a140d97a04b75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a7c68c706aa05e265b14a140d97a04b75" kindref="member">Camera::forcePos</ref>(std::string<sp/>_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_angle)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>updatePos,<sp/>except:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>angle<sp/>based<sp/>on<sp/>input<sp/>_angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref><sp/>=<sp/>_angle;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref><sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1ab00e4b94b999ddf53a637e4a999959ee" kindref="member">getLinVelocity</ref>(_name);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>centre(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(_name));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>result(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>a<sp/>=<sp/>centre.toVec3();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>p_out;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>p(eye.m_x,<sp/>eye.m_y<sp/>-<sp/>2<sp/>,eye.m_z);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>vel<sp/>=<sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//line<sp/>of<sp/>sight<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1aa5c4661e5ac86c996bd4e8f66f39e980" kindref="member">rayTest</ref>(a,<sp/>p,<sp/>p_out))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>&gt;=<sp/>1.3)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>-=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>+=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ngl::Vec4(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(_angle),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(_angle)),0);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>ngl::Vec4(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec4<sp/>tempResult(centre.m_x<sp/>+<sp/>(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>+0.1*vel.length())<sp/>*<sp/>cos(_angle),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>-0.1*vel.length(),(centre.m_z<sp/>+<sp/>(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>+0.1)<sp/>*<sp/>sin(_angle)),0);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>ngl::Vec3(tempResult.m_x,<sp/>tempResult.m_y<sp/>-<sp/>2<sp/>,tempResult.m_z);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1aa5c4661e5ac86c996bd4e8f66f39e980" kindref="member">rayTest</ref>(a,<sp/>p)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>&lt;<sp/><ref refid="class_camera_1ae0462f3e9b30983eed14c39c892ffe0f" kindref="member">m_camDistance</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>+=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ngl::Vec3(tempResult.m_x,tempResult.m_y+2,tempResult.m_z);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>ngl::Vec4(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>&gt;<sp/>10)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>-=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>dir.normalize();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>dir.m_y=0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>=<sp/>result.toVec3();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>velocity<sp/>=<sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>-<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>velocity<sp/>*=<sp/>4;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a73a5f631224e1486c7d6343f0a148ac0" kindref="member">setLinVelocity</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,velocity);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setEye(eye);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setLook(centre);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;moveLook(<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[0]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[1]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[2]/60.0f);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_camera_1a4cf1bea5786624b4c3b08e7da5a64cdf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a7c68c706aa05e265b14a140d97a04b75" kindref="member">Camera::forcePos</ref>(std::string<sp/>_name,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_angle,<sp/>ngl::Vec3<sp/>_focus)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>updatePos,<sp/>except:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>centre<sp/>and<sp/>angle<sp/>based<sp/>on<sp/>input<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>centre(_focus.m_x,<sp/>_focus.m_y,<sp/>_focus.m_z,<sp/>0);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref><sp/>=<sp/>_angle;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref><sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1ab00e4b94b999ddf53a637e4a999959ee" kindref="member">getLinVelocity</ref>(_name);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>result(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(<ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>)),0);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>a<sp/>=<sp/>centre.toVec3();</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>p_out;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>p(eye.m_x,<sp/>eye.m_y<sp/>-<sp/>2<sp/>,eye.m_z);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>vel<sp/>=<sp/><ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//line<sp/>of<sp/>sight<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1aa5c4661e5ac86c996bd4e8f66f39e980" kindref="member">rayTest</ref>(a,<sp/>p,<sp/>p_out))</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//time_t<sp/>t<sp/>=<sp/>time(0);<sp/><sp/><sp/>//<sp/>get<sp/>time<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>struct<sp/>tm<sp/>*<sp/>now<sp/>=<sp/>localtime(<sp/>&amp;<sp/>t<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout&lt;&lt;&quot;No<sp/>line<sp/>of<sp/>sight,<sp/>time<sp/>=<sp/>&quot;&lt;&lt;<sp/>now-&gt;tm_hour<sp/>&lt;&lt;<sp/>&apos;:&apos;<sp/>&lt;&lt;<sp/>now-&gt;tm_min<sp/>&lt;&lt;<sp/>&apos;:&apos;&lt;&lt;<sp/><sp/>now-&gt;tm_sec<sp/>&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>&gt;=<sp/>1.3)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>-=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>+=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ngl::Vec4(centre.m_x<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>cos(_angle),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>,(centre.m_z<sp/>+<sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>*<sp/>sin(_angle)),0);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>ngl::Vec4(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec4<sp/>tempResult(centre.m_x<sp/>+<sp/>(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>+0.1*vel.length())<sp/>*<sp/>cos(_angle),centre.m_y+<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref>-0.1*vel.length(),(centre.m_z<sp/>+<sp/>(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>+0.1)<sp/>*<sp/>sin(_angle)),0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>ngl::Vec3(tempResult.m_x,<sp/>tempResult.m_y<sp/>-<sp/>2<sp/>,tempResult.m_z);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1aa5c4661e5ac86c996bd4e8f66f39e980" kindref="member">rayTest</ref>(a,<sp/>p)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>&lt;<sp/><ref refid="class_camera_1ae0462f3e9b30983eed14c39c892ffe0f" kindref="member">m_camDistance</ref>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>+=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>ngl::Vec3(tempResult.m_x,tempResult.m_y+2,tempResult.m_z);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir<sp/>=<sp/>ngl::Vec4(result<sp/>-<sp/>centre);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>&gt;<sp/>10)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_camera_1a67ddb8cc8866c76f7b6cc238d3f076bd" kindref="member">m_camHeight</ref><sp/>-=<sp/>0.1*vel.length();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/>dir.normalize();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>dir.m_y=0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>=<sp/>result.toVec3();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>velocity<sp/>=<sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>-<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>velocity<sp/>*=<sp/>4;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a73a5f631224e1486c7d6343f0a148ac0" kindref="member">setLinVelocity</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,velocity);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>eye<sp/>=<sp/><ref refid="class_camera_1a648178657732de1dfa9102997a79dc91" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setEye(eye);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;setLook(centre);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref><sp/>-&gt;moveLook(<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[0]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[1]/60.0f,<ref refid="class_camera_1a753dd77b11956734d5384a0b3a0f992f" kindref="member">m_camVel</ref>[2]/60.0f);</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="class_camera_1a3b565fb6a9ec8aab39fb5f57ee188a0d" refkind="member"><highlight class="normal">ngl::Vec4<sp/><ref refid="class_camera_1a3b565fb6a9ec8aab39fb5f57ee188a0d" kindref="member">Camera::getEye</ref>()</highlight></codeline>
<codeline lineno="287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;getEye();</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_camera_1a00fd996bda56a58447739f2543abc545" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a00fd996bda56a58447739f2543abc545" kindref="member">Camera::setEye</ref>(ngl::Vec4<sp/>_eye)</highlight></codeline>
<codeline lineno="292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;setEye(_eye);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_camera_1ae19b3c8112edf783476dd2197baa4a36" refkind="member"><highlight class="normal">ngl::Vec4<sp/><ref refid="class_camera_1ae19b3c8112edf783476dd2197baa4a36" kindref="member">Camera::getLook</ref>()</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;getLook();</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_camera_1ab46fe10a05b101d6b4fa14fd09117748" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1ab46fe10a05b101d6b4fa14fd09117748" kindref="member">Camera::setLook</ref>(ngl::Vec4<sp/>_look)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;setLook(_look);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="class_camera_1aef53a322f457d7524838961257a9209e" refkind="member"><highlight class="normal">ngl::Mat4<sp/><ref refid="class_camera_1aef53a322f457d7524838961257a9209e" kindref="member">Camera::getViewMatrix</ref>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;getViewMatrix();</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="class_camera_1a376f5df8168b969cea49fea6b7881160" refkind="member"><highlight class="normal">ngl::Mat4<sp/><ref refid="class_camera_1a376f5df8168b969cea49fea6b7881160" kindref="member">Camera::getVPMatrix</ref>()</highlight></codeline>
<codeline lineno="312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;getVPMatrix();</highlight></codeline>
<codeline lineno="314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316" refid="class_camera_1ad6b6e1eeb63a2a9e1bfdb0a2ce99ea7e" refkind="member"><highlight class="normal">ngl::Mat4<sp/><ref refid="class_camera_1ad6b6e1eeb63a2a9e1bfdb0a2ce99ea7e" kindref="member">Camera::getProjectionMatrix</ref>()</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;getProjectionMatrix();</highlight></codeline>
<codeline lineno="319"><highlight class="normal">}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">Camera::getDistance</ref>()</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_camera_1a64a11237be8d57b468666cae99741864" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a64a11237be8d57b468666cae99741864" kindref="member">Camera::setDistance</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_distance)</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a3bf5da6c6cc92ccaa8a10c6a0955197e" kindref="member">m_tempDistance</ref><sp/>=<sp/>_distance;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="class_camera_1aeb2fffe048b65431de6b2beccdb34135" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_camera_1aeb2fffe048b65431de6b2beccdb34135" kindref="member">Camera::getAngle</ref>()</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336" refid="class_camera_1a60d0c53628aa3654b64eb1bc8beb1e28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a60d0c53628aa3654b64eb1bc8beb1e28" kindref="member">Camera::setAngle</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_angle)</highlight></codeline>
<codeline lineno="337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a799ac266489a22baf8dbbc6243895407" kindref="member">m_camAngle</ref><sp/>=<sp/>_angle;</highlight></codeline>
<codeline lineno="339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341" refid="class_camera_1a8936b4a8ca0426b7fcd99fd3aafd3748" refkind="member"><highlight class="normal">ngl::Vec3<sp/><ref refid="class_camera_1a8936b4a8ca0426b7fcd99fd3aafd3748" kindref="member">Camera::getIdealPos</ref>()</highlight></codeline>
<codeline lineno="342"><highlight class="normal">{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346" refid="class_camera_1a49e8ca8db6e215ada90c8c2db6fbb4fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1a49e8ca8db6e215ada90c8c2db6fbb4fd" kindref="member">Camera::setIdealPos</ref>(ngl::Vec3<sp/>_pos)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a8aa7769c1bd695f705c2efa12e887b52" kindref="member">m_camIdealPos</ref><sp/>=<sp/>_pos;</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="class_camera_1ae8ed31422d897f6a8df266048beb14ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_camera_1ae8ed31422d897f6a8df266048beb14ea" kindref="member">Camera::setShape</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_aspect,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_near,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_far)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><ref refid="class_camera_1a452e787ab424125456f1c78f0b9508b6" kindref="member">m_camera</ref>-&gt;setShape(_angle,_aspect,_near,_far);</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/Camera.cpp"/>
  </compounddef>
</doxygen>
