<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_shader_factory_8cpp" kind="file">
    <compoundname>ShaderFactory.cpp</compoundname>
    <includes refid="_shader_factory_8h" local="yes">ShaderFactory.h</includes>
    <incdepgraph>
      <node id="2538">
        <label>ngl/ShaderLib.h</label>
      </node>
      <node id="2536">
        <label>ShaderFactory.cpp</label>
        <link refid="ShaderFactory.cpp"/>
        <childnode refid="2537" relation="include">
        </childnode>
      </node>
      <node id="2537">
        <label>ShaderFactory.h</label>
        <link refid="_shader_factory_8h"/>
        <childnode refid="2538" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shader_factory_8h" kindref="compound">ShaderFactory.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_shader_factory_1afb7dddffa132654b2a6c7b4b1dfd7fb5" refkind="member"><highlight class="normal"><ref refid="class_shader_factory_1afb7dddffa132654b2a6c7b4b1dfd7fb5" kindref="member">ShaderFactory::ShaderFactory</ref>()</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{}</highlight></codeline>
<codeline lineno="5" refid="class_shader_factory_1a24e606eeaf1f429b2cc8d4ddf23f92e2" refkind="member"><highlight class="normal"><ref refid="class_shader_factory_1a24e606eeaf1f429b2cc8d4ddf23f92e2" kindref="member">ShaderFactory::~ShaderFactory</ref>()</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9" refid="class_shader_factory_1a380d9159ce70475f4337d97bf2120416" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shader_factory_1a380d9159ce70475f4337d97bf2120416" kindref="member">ShaderFactory::createDebugShader</ref>()</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//DEBUG<sp/>SHADER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shaderDebug=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;createShaderProgram(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>are<sp/>going<sp/>to<sp/>create<sp/>empty<sp/>shaders<sp/>for<sp/>Frag<sp/>and<sp/>Vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;DebugShaderVertex&quot;</highlight><highlight class="normal">,ngl::ShaderType::VERTEX);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;DebugShaderFragment&quot;</highlight><highlight class="normal">,ngl::ShaderType::FRAGMENT);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;DebugShaderVertex&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/DebugShaderVertex.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;DebugShaderFragment&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/DebugShaderFragment.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;DebugShaderVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;DebugShaderFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>them<sp/>to<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DebugShaderVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;DebugShaderFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>bind<sp/>the<sp/>shader<sp/>attributes<sp/>for<sp/>most<sp/>NGL<sp/>primitives<sp/>we<sp/>use<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>layout<sp/>attribute<sp/>0<sp/>is<sp/>the<sp/>vertex<sp/>data<sp/>(x,y,z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inPos&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>1<sp/>is<sp/>the<sp/>UV<sp/>data<sp/>u,v<sp/>(if<sp/>present)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">,1,</highlight><highlight class="stringliteral">&quot;inColour&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>associated<sp/>this<sp/>data<sp/>we<sp/>can<sp/>link<sp/>the<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>shaderDebug-&gt;linkProgramObject(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="class_shader_factory_1a7c8dd505b5c3b2438784d99bc6dc0356" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shader_factory_1a7c8dd505b5c3b2438784d99bc6dc0356" kindref="member">ShaderFactory::createTextureShader</ref>()</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>creating<sp/>a<sp/>shader<sp/>called<sp/>Texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>shader-&gt;createShaderProgram(</highlight><highlight class="stringliteral">&quot;Texture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>are<sp/>going<sp/>to<sp/>create<sp/>empty<sp/>shaders<sp/>for<sp/>Frag<sp/>and<sp/>Vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>shader-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;TextureVertex&quot;</highlight><highlight class="normal">,ngl::ShaderType::VERTEX);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>shader-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;TextureFragment&quot;</highlight><highlight class="normal">,ngl::ShaderType::FRAGMENT);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>shader-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;TextureVertex&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/TextureVert.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>shader-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;TextureFragment&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/TextureFrag.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>shader-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;TextureVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>shader-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;TextureFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>them<sp/>to<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>shader-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;Texture&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;TextureVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>shader-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;Texture&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;TextureFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>associated<sp/>this<sp/>data<sp/>we<sp/>can<sp/>link<sp/>the<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>shader-&gt;linkProgramObject(</highlight><highlight class="stringliteral">&quot;Texture&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_shader_factory_1a6ea1c591503f6b4f0d044a1cf695f9a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shader_factory_1a6ea1c591503f6b4f0d044a1cf695f9a5" kindref="member">ShaderFactory::createGroundShader</ref>()</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>creating<sp/>a<sp/>shader<sp/>called<sp/>Ground<sp/>for<sp/>lava/water<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>shader-&gt;createShaderProgram(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>are<sp/>going<sp/>to<sp/>create<sp/>empty<sp/>shaders<sp/>for<sp/>Frag<sp/>and<sp/>Vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>shader-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;GroundVertex&quot;</highlight><highlight class="normal">,ngl::ShaderType::VERTEX);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>shader-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;GroundFragment&quot;</highlight><highlight class="normal">,ngl::ShaderType::FRAGMENT);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>shader-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;GroundVertex&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/GroundVertex.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>shader-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;GroundFragment&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/GroundFragment.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>shader-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;GroundVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>shader-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;GroundFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>them<sp/>to<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>shader-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;GroundVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>shader-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;GroundFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>bind<sp/>the<sp/>shader<sp/>attributes<sp/>for<sp/>most<sp/>NGL<sp/>primitives<sp/>we<sp/>use<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>layout<sp/>attribute<sp/>0<sp/>is<sp/>the<sp/>vertex<sp/>data<sp/>(x,y,z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>shader-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inVert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>1<sp/>is<sp/>the<sp/>UV<sp/>data<sp/>u,v<sp/>(if<sp/>present)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>shader-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">,1,</highlight><highlight class="stringliteral">&quot;inUV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>2<sp/>are<sp/>the<sp/>normals<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>shader-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">,2,</highlight><highlight class="stringliteral">&quot;inNormal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>associated<sp/>this<sp/>data<sp/>we<sp/>can<sp/>link<sp/>the<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>shader-&gt;linkProgramObject(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="class_shader_factory_1a51fbd5c27d493d2c80415a6c46efaf28" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_shader_factory_1a51fbd5c27d493d2c80415a6c46efaf28" kindref="member">ShaderFactory::createPhongShader</ref>()</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>creating<sp/>a<sp/>shader<sp/>called<sp/>Phong</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>shader-&gt;createShaderProgram(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>are<sp/>going<sp/>to<sp/>create<sp/>empty<sp/>shaders<sp/>for<sp/>Frag<sp/>and<sp/>Vert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>shader-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;PhongVertex&quot;</highlight><highlight class="normal">,ngl::ShaderType::VERTEX);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>shader-&gt;attachShader(</highlight><highlight class="stringliteral">&quot;PhongFragment&quot;</highlight><highlight class="normal">,ngl::ShaderType::FRAGMENT);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>the<sp/>source</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>shader-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;PhongVertex&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/PhongVertex.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>shader-&gt;loadShaderSource(</highlight><highlight class="stringliteral">&quot;PhongFragment&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;shaders/PhongFragment.glsl&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>compile<sp/>the<sp/>shaders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>shader-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;PhongVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>shader-&gt;compileShader(</highlight><highlight class="stringliteral">&quot;PhongFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>them<sp/>to<sp/>the<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>shader-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;PhongVertex&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>shader-&gt;attachShaderToProgram(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;PhongFragment&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>bind<sp/>the<sp/>shader<sp/>attributes<sp/>for<sp/>most<sp/>NGL<sp/>primitives<sp/>we<sp/>use<sp/>the<sp/>following</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>layout<sp/>attribute<sp/>0<sp/>is<sp/>the<sp/>vertex<sp/>data<sp/>(x,y,z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>shader-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">,0,</highlight><highlight class="stringliteral">&quot;inVert&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>1<sp/>is<sp/>the<sp/>UV<sp/>data<sp/>u,v<sp/>(if<sp/>present)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>shader-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">,1,</highlight><highlight class="stringliteral">&quot;inUV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attribute<sp/>2<sp/>are<sp/>the<sp/>normals<sp/>x,y,z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>shader-&gt;bindAttribute(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">,2,</highlight><highlight class="stringliteral">&quot;inNormal&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>associated<sp/>this<sp/>data<sp/>we<sp/>can<sp/>link<sp/>the<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>shader-&gt;linkProgramObject(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/ShaderFactory.cpp"/>
  </compounddef>
</doxygen>
