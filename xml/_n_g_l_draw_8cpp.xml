<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_n_g_l_draw_8cpp" kind="file">
    <compoundname>NGLDraw.cpp</compoundname>
    <includes refid="_n_g_l_draw_8h" local="yes">NGLDraw.h</includes>
    <includes refid="_physics_world_8h" local="yes">PhysicsWorld.h</includes>
    <includes refid="_collision_shape_8h" local="yes">CollisionShape.h</includes>
    <includes local="no">ngl/ShaderLib.h</includes>
    <includes local="no">ngl/NGLInit.h</includes>
    <includes local="no">ngl/Material.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">ngl/Random.h</includes>
    <includes local="no">ngl/NGLStream.h</includes>
    <includes refid="_animation_8h" local="yes">Animation.h</includes>
    <includes local="no">glm/gtc/noise.hpp</includes>
    <includes local="no">QGLWidget</includes>
    <incdepgraph>
      <node id="2298">
        <label>list</label>
      </node>
      <node id="2305">
        <label>ngl/NGLInit.h</label>
      </node>
      <node id="2308">
        <label>ngl/Random.h</label>
      </node>
      <node id="2284">
        <label>Ltimer.h</label>
        <link refid="_ltimer_8h"/>
        <childnode refid="2262" relation="include">
        </childnode>
      </node>
      <node id="2289">
        <label>CoinFactory.h</label>
        <link refid="_coin_factory_8h"/>
        <childnode refid="2290" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
      </node>
      <node id="2272">
        <label>Character.h</label>
        <link refid="_character_8h"/>
        <childnode refid="2259" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
      </node>
      <node id="2292">
        <label>ngl/VAOPrimitives.h</label>
      </node>
      <node id="2262">
        <label>SDL.h</label>
      </node>
      <node id="2268">
        <label>ngl/VertexArrayObject.h</label>
      </node>
      <node id="2283">
        <label>ngl/Types.h</label>
      </node>
      <node id="2261">
        <label>ngl/Light.h</label>
      </node>
      <node id="2269">
        <label>ngl/Colour.h</label>
      </node>
      <node id="2278">
        <label>BulletDebugDraw.h</label>
        <link refid="_bullet_debug_draw_8h"/>
        <childnode refid="2279" relation="include">
        </childnode>
        <childnode refid="2280" relation="include">
        </childnode>
        <childnode refid="2275" relation="include">
        </childnode>
      </node>
      <node id="2267">
        <label>ngl/Vec2.h</label>
      </node>
      <node id="2263">
        <label>ngl/Transformation.h</label>
      </node>
      <node id="2281">
        <label>CollisionShape.h</label>
        <link refid="_collision_shape_8h"/>
        <childnode refid="2274" relation="include">
        </childnode>
        <childnode refid="2282" relation="include">
        </childnode>
        <childnode refid="2264" relation="include">
        </childnode>
        <childnode refid="2283" relation="include">
        </childnode>
        <childnode refid="2270" relation="include">
        </childnode>
      </node>
      <node id="2291">
        <label>Trigger.h</label>
        <link refid="_trigger_8h"/>
        <childnode refid="2275" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2292" relation="include">
        </childnode>
        <childnode refid="2263" relation="include">
        </childnode>
      </node>
      <node id="2270">
        <label>string</label>
      </node>
      <node id="2304">
        <label>ngl/ShaderLib.h</label>
      </node>
      <node id="2309">
        <label>glm/gtc/noise.hpp</label>
      </node>
      <node id="2271">
        <label>map</label>
      </node>
      <node id="2294">
        <label>Platform.h</label>
        <link refid="_platform_8h"/>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
      </node>
      <node id="2293">
        <label>PlatformFactory.h</label>
        <link refid="_platform_factory_8h"/>
        <childnode refid="2294" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
      </node>
      <node id="2295">
        <label>HighScore.h</label>
        <link refid="_high_score_8h"/>
        <childnode refid="2296" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
      </node>
      <node id="2285">
        <label>Level.h</label>
        <link refid="_level_8h"/>
        <childnode refid="2259" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2266" relation="include">
        </childnode>
      </node>
      <node id="2265">
        <label>ngl/Obj.h</label>
      </node>
      <node id="2306">
        <label>ngl/Material.h</label>
      </node>
      <node id="2302">
        <label>QtCore/QTextStream</label>
      </node>
      <node id="2266">
        <label>Text.h</label>
        <link refid="_text_8h"/>
        <childnode refid="2267" relation="include">
        </childnode>
        <childnode refid="2268" relation="include">
        </childnode>
        <childnode refid="2269" relation="include">
        </childnode>
        <childnode refid="2270" relation="include">
        </childnode>
        <childnode refid="2271" relation="include">
        </childnode>
      </node>
      <node id="2280">
        <label>vector</label>
      </node>
      <node id="2259">
        <label>NGLDraw.h</label>
        <link refid="_n_g_l_draw_8h"/>
        <childnode refid="2260" relation="include">
        </childnode>
        <childnode refid="2261" relation="include">
        </childnode>
        <childnode refid="2262" relation="include">
        </childnode>
        <childnode refid="2263" relation="include">
        </childnode>
        <childnode refid="2264" relation="include">
        </childnode>
        <childnode refid="2265" relation="include">
        </childnode>
        <childnode refid="2266" relation="include">
        </childnode>
        <childnode refid="2272" relation="include">
        </childnode>
        <childnode refid="2285" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2288" relation="include">
        </childnode>
        <childnode refid="2289" relation="include">
        </childnode>
        <childnode refid="2293" relation="include">
        </childnode>
        <childnode refid="2295" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2298" relation="include">
        </childnode>
        <childnode refid="2299" relation="include">
        </childnode>
        <childnode refid="2303" relation="include">
        </childnode>
      </node>
      <node id="2276">
        <label>ngl/Mat4.h</label>
      </node>
      <node id="2258">
        <label>NGLDraw.cpp</label>
        <link refid="NGLDraw.cpp"/>
        <childnode refid="2259" relation="include">
        </childnode>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2281" relation="include">
        </childnode>
        <childnode refid="2304" relation="include">
        </childnode>
        <childnode refid="2305" relation="include">
        </childnode>
        <childnode refid="2306" relation="include">
        </childnode>
        <childnode refid="2307" relation="include">
        </childnode>
        <childnode refid="2308" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2286" relation="include">
        </childnode>
        <childnode refid="2309" relation="include">
        </childnode>
        <childnode refid="2310" relation="include">
        </childnode>
      </node>
      <node id="2310">
        <label>QGLWidget</label>
      </node>
      <node id="2307">
        <label>math.h</label>
      </node>
      <node id="2288">
        <label>Camera.h</label>
        <link refid="_camera_8h"/>
        <childnode refid="2273" relation="include">
        </childnode>
        <childnode refid="2260" relation="include">
        </childnode>
      </node>
      <node id="2286">
        <label>Animation.h</label>
        <link refid="_animation_8h"/>
        <childnode refid="2259" relation="include">
        </childnode>
        <childnode refid="2287" relation="include">
        </childnode>
      </node>
      <node id="2296">
        <label>iostream</label>
      </node>
      <node id="2297">
        <label>QtCore/QString</label>
      </node>
      <node id="2282">
        <label>unordered_map</label>
      </node>
      <node id="2287">
        <label>ngl/NCCAPointBake.h</label>
      </node>
      <node id="2301">
        <label>QtCore/QFile</label>
      </node>
      <node id="2303">
        <label>ShaderFactory.h</label>
        <link refid="_shader_factory_8h"/>
        <childnode refid="2304" relation="include">
        </childnode>
      </node>
      <node id="2274">
        <label>btBulletDynamicsCommon.h</label>
      </node>
      <node id="2290">
        <label>Coin.h</label>
        <link refid="_coin_8h"/>
        <childnode refid="2259" relation="include">
        </childnode>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2284" relation="include">
        </childnode>
      </node>
      <node id="2279">
        <label>LinearMath/btIDebugDraw.h</label>
      </node>
      <node id="2277">
        <label>set</label>
      </node>
      <node id="2299">
        <label>TriggerFactory.h</label>
        <link refid="_trigger_factory_8h"/>
        <childnode refid="2291" relation="include">
        </childnode>
        <childnode refid="2300" relation="include">
        </childnode>
        <childnode refid="2297" relation="include">
        </childnode>
        <childnode refid="2301" relation="include">
        </childnode>
        <childnode refid="2302" relation="include">
        </childnode>
      </node>
      <node id="2275">
        <label>ngl/Vec3.h</label>
      </node>
      <node id="2300">
        <label>ngl/NGLStream.h</label>
      </node>
      <node id="2260">
        <label>ngl/Camera.h</label>
      </node>
      <node id="2264">
        <label>memory</label>
      </node>
      <node id="2273">
        <label>PhysicsWorld.h</label>
        <link refid="_physics_world_8h"/>
        <childnode refid="2274" relation="include">
        </childnode>
        <childnode refid="2275" relation="include">
        </childnode>
        <childnode refid="2276" relation="include">
        </childnode>
        <childnode refid="2265" relation="include">
        </childnode>
        <childnode refid="2264" relation="include">
        </childnode>
        <childnode refid="2277" relation="include">
        </childnode>
        <childnode refid="2278" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1a1e7bfa770ab6ff97ddeda9d97a5bd527" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float INCREMENT</definition>
        <argsstring></argsstring>
        <name>INCREMENT</name>
        <initializer>=0.01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="15" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" prot="public" static="yes" mutable="no">
        <type>const float</type>
        <definition>const float ZOOM</definition>
        <argsstring></argsstring>
        <name>ZOOM</name>
        <initializer>=2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="16" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="16" bodyend="-1"/>
        <referencedby refid="class_n_g_l_draw_1a8782a682c3a362baa3b18882f49c95ed" compoundref="_n_g_l_draw_8cpp" startline="1268" endline="1290">NGLDraw::wheelEvent</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1a6e87b77363231829c6f99c29a2904e7b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Sky_RED</definition>
        <argsstring></argsstring>
        <name>Sky_RED</name>
        <initializer>= 0.64f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="17" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="17" bodyend="-1"/>
        <referencedby refid="class_n_g_l_draw_1ad656ac3d12043d9fbb59985db83e5b52" compoundref="_n_g_l_draw_8cpp" startline="21" endline="299">NGLDraw::NGLDraw</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1af53c11fc7d7125611545a3c5a87ebd23" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Sky_GREEN</definition>
        <argsstring></argsstring>
        <name>Sky_GREEN</name>
        <initializer>= 0.85f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="18" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="18" bodyend="-1"/>
        <referencedby refid="class_n_g_l_draw_1ad656ac3d12043d9fbb59985db83e5b52" compoundref="_n_g_l_draw_8cpp" startline="21" endline="299">NGLDraw::NGLDraw</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1a0f58e79684a2994414a304aae4ea869e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Sky_BLUE</definition>
        <argsstring></argsstring>
        <name>Sky_BLUE</name>
        <initializer>= 0.91f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="19" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="19" bodyend="-1"/>
        <referencedby refid="class_n_g_l_draw_1ad656ac3d12043d9fbb59985db83e5b52" compoundref="_n_g_l_draw_8cpp" startline="21" endline="299">NGLDraw::NGLDraw</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1a795c922bb6141b030644592fcffa850b" prot="public" static="no" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int TEXTURE_WIDTH</definition>
        <argsstring></argsstring>
        <name>TEXTURE_WIDTH</name>
        <initializer>=1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="527" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="527" bodyend="-1"/>
        <referencedby refid="class_n_g_l_draw_1ad3e4e95bd10a6590c083e3925a9570a0" compoundref="_n_g_l_draw_8cpp" startline="549" endline="643">NGLDraw::drawDepth</referencedby>
        <referencedby refid="class_n_g_l_draw_1a45a8557f4a2ef22ca853c08cd81c8f8a" compoundref="_n_g_l_draw_8cpp" startline="1192" endline="1226">NGLDraw::createFramebufferObject</referencedby>
      </memberdef>
      <memberdef kind="variable" id="_n_g_l_draw_8cpp_1adc64a996fed3c125c1e9f6c055ce644f" prot="public" static="no" mutable="no">
        <type>constexpr int</type>
        <definition>constexpr int TEXTURE_HEIGHT</definition>
        <argsstring></argsstring>
        <name>TEXTURE_HEIGHT</name>
        <initializer>=1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" line="528" column="1" bodyfile="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp" bodystart="528" bodyend="-1"/>
        <referencedby refid="class_n_g_l_draw_1ad3e4e95bd10a6590c083e3925a9570a0" compoundref="_n_g_l_draw_8cpp" startline="549" endline="643">NGLDraw::drawDepth</referencedby>
        <referencedby refid="class_n_g_l_draw_1a45a8557f4a2ef22ca853c08cd81c8f8a" compoundref="_n_g_l_draw_8cpp" startline="1192" endline="1226">NGLDraw::createFramebufferObject</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_n_g_l_draw_8h" kindref="compound">NGLDraw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_physics_world_8h" kindref="compound">PhysicsWorld.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_collision_shape_8h" kindref="compound">CollisionShape.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ngl/ShaderLib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ngl/NGLInit.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ngl/Material.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ngl/Random.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ngl/NGLStream.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_animation_8h" kindref="compound">Animation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;glm/gtc/noise.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QGLWidget&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="_n_g_l_draw_8cpp_1a1e7bfa770ab6ff97ddeda9d97a5bd527" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1a1e7bfa770ab6ff97ddeda9d97a5bd527" kindref="member">INCREMENT</ref>=0.01;</highlight></codeline>
<codeline lineno="16" refid="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" kindref="member">ZOOM</ref>=2;</highlight></codeline>
<codeline lineno="17" refid="_n_g_l_draw_8cpp_1a6e87b77363231829c6f99c29a2904e7b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1a6e87b77363231829c6f99c29a2904e7b" kindref="member">Sky_RED</ref><sp/>=<sp/>0.64f;</highlight></codeline>
<codeline lineno="18" refid="_n_g_l_draw_8cpp_1af53c11fc7d7125611545a3c5a87ebd23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1af53c11fc7d7125611545a3c5a87ebd23" kindref="member">Sky_GREEN</ref><sp/>=<sp/>0.85f;</highlight></codeline>
<codeline lineno="19" refid="_n_g_l_draw_8cpp_1a0f58e79684a2994414a304aae4ea869e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1a0f58e79684a2994414a304aae4ea869e" kindref="member">Sky_BLUE</ref><sp/>=<sp/>0.91f;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="class_n_g_l_draw_1ad656ac3d12043d9fbb59985db83e5b52" refkind="member"><highlight class="normal"><ref refid="class_n_g_l_draw_1ad656ac3d12043d9fbb59985db83e5b52" kindref="member">NGLDraw::NGLDraw</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a776ada75080f8a0e3672b2d18d06d789" kindref="member">m_debug</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ae6da031d343135a463a5aa4892447d78" kindref="member">m_rotate</ref>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a333a68dffb2f17de902059bdde7d1d55" kindref="member">m_spinXFace</ref>=0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a18af23a99a457663dd95efeb7e7b3455" kindref="member">m_spinYFace</ref>=0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a362cdfd35285a298b7c0a4d1a52d4d8f" kindref="member">m_prevRot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;sphere&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;larry&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>.set(10,40,0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a535f8a8f46457bfc8fd3f8d160c1fbe7" kindref="member">m_lastTime</ref><sp/>=0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a912b50c593789f4c008513bbfb501957" kindref="member">m_buttonCooldown</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//PHYSICS<sp/>with<sp/>either<sp/>debug<sp/>enabled<sp/>or<sp/>disabled<sp/>(true<sp/>or<sp/>false<sp/>values)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//create<sp/>main<sp/>game<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_physics_world" kindref="compound">PhysicsWorld</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_trigger_factory" kindref="compound">TriggerFactory</ref>(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get()));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_character" kindref="compound">Character</ref>(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get()));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_level" kindref="compound">Level</ref>(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get()));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_animation" kindref="compound">Animation</ref>());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_coin_factory" kindref="compound">CoinFactory</ref>());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_platform_factory" kindref="compound">PlatformFactory</ref>(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get()));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_text" kindref="compound">Text</ref>(</highlight><highlight class="stringliteral">&quot;font/arial.ttf&quot;</highlight><highlight class="normal">,12));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_text" kindref="compound">Text</ref>(</highlight><highlight class="stringliteral">&quot;font/arial.ttf&quot;</highlight><highlight class="normal">,20));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_high_score" kindref="compound">HighScore</ref>());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;highScoreRead();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>glClearColor(<ref refid="_n_g_l_draw_8cpp_1a6e87b77363231829c6f99c29a2904e7b" kindref="member">Sky_RED</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1af53c11fc7d7125611545a3c5a87ebd23" kindref="member">Sky_GREEN</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1a0f58e79684a2994414a304aae4ea869e" kindref="member">Sky_BLUE</ref>,<sp/>1.0f);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>depth<sp/>testing<sp/>for<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>glEnable(GL_DEPTH_TEST);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>to<sp/>load<sp/>the<sp/>shader<sp/>and<sp/>set<sp/>the<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>an<sp/>instance<sp/>of<sp/>shader<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>ngl::NGLInit::instance();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>initialize<sp/>our<sp/>new<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_camera" kindref="compound">Camera</ref>(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Fake<sp/>camera<sp/>to<sp/>make<sp/>lights<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>from(0,15,3);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>to(0,0,0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>up(0,1,0);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>load<sp/>to<sp/>our<sp/>new<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>ngl::Camera<sp/>*camcam<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Camera(from,to,up);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>shape<sp/>using<sp/>FOV<sp/>45<sp/>Aspect<sp/>Ratio<sp/>based<sp/>on<sp/>Width<sp/>and<sp/>Height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>final<sp/>two<sp/>are<sp/>near<sp/>and<sp/>far<sp/>clipping<sp/>planes<sp/>of<sp/>0.5<sp/>and<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>camcam-&gt;setShape(60,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)720.0/576.0,0.05,350);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>create<sp/>our<sp/>light<sp/>this<sp/>is<sp/>done<sp/>after<sp/>the<sp/>camera<sp/>so<sp/>we<sp/>can<sp/>pass<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transpose<sp/>of<sp/>the<sp/>projection<sp/>matrix<sp/>to<sp/>the<sp/>light<sp/>to<sp/>do<sp/>correct<sp/>eye<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>transformations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>camcam-&gt;setEye(ngl::Vec4(10.0,10.0,10.0,1.0));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>ngl::Mat4<sp/>iv=camcam-&gt;getViewMatrix();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>iv.transpose();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Light(ngl::Vec3(<ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>.m_x,<sp/>60.0f,<sp/><ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>.m_z),</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Colour(1,1,1,1),ngl::Colour(1,1,1,1),ngl::LightModes::POINTLIGHT);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref>-&gt;setTransform(iv);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>here<sp/>we<sp/>set<sp/>the<sp/>light<sp/>POV<sp/>camera<sp/>shape,<sp/>the<sp/>aspect<sp/>is<sp/>1<sp/>as<sp/>our</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>texture<sp/>is<sp/>square.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>the<sp/>same<sp/>clip<sp/>plane<sp/>as<sp/>before<sp/>but<sp/>set<sp/>the<sp/>FOV<sp/>a<sp/>bit<sp/>larger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>get<sp/>slightly<sp/>better<sp/>shadows<sp/>and<sp/>the<sp/>clip<sp/>planes<sp/>will<sp/>help</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>get<sp/>rid<sp/>of<sp/>some<sp/>of<sp/>the<sp/>artefacts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.setShape(60,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)720.0/576.0,<sp/>0.05,<sp/>350);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------------------------------<sp/>Create<sp/>Main<sp/>Shaders<sp/>---------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//create<sp/>the<sp/>shader<sp/>factory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><ref refid="class_shader_factory" kindref="compound">ShaderFactory</ref><sp/>makeShaders;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>makeShaders.<ref refid="class_shader_factory_1a380d9159ce70475f4337d97bf2120416" kindref="member">createDebugShader</ref>();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>makeShaders.<ref refid="class_shader_factory_1a7c8dd505b5c3b2438784d99bc6dc0356" kindref="member">createTextureShader</ref>();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>makeShaders.<ref refid="class_shader_factory_1a6ea1c591503f6b4f0d044a1cf695f9a5" kindref="member">createGroundShader</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">,<sp/>10.3f);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;Velocity&quot;</highlight><highlight class="normal">,<sp/>0.0005f);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;Amp&quot;</highlight><highlight class="normal">,<sp/>0.03f);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam3f(</highlight><highlight class="stringliteral">&quot;skyColour&quot;</highlight><highlight class="normal">,<sp/><ref refid="_n_g_l_draw_8cpp_1a6e87b77363231829c6f99c29a2904e7b" kindref="member">Sky_RED</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1af53c11fc7d7125611545a3c5a87ebd23" kindref="member">Sky_GREEN</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1a0f58e79684a2994414a304aae4ea869e" kindref="member">Sky_BLUE</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParamFromVec4(</highlight><highlight class="stringliteral">&quot;light.diffuse&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec4(<ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref>-&gt;getColour().m_r,<ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref>-&gt;getColour().m_g,<ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref>-&gt;getColour().m_b,<ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref>-&gt;getColour().m_a));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>makeShaders.<ref refid="class_shader_factory_1a51fbd5c27d493d2c80415a6c46efaf28" kindref="member">createPhongShader</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>ngl::Material<sp/>m(ngl::STDMAT::GOLD);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>our<sp/>material<sp/>values<sp/>to<sp/>the<sp/>shader<sp/>into<sp/>the<sp/>structure<sp/>material<sp/>(see<sp/>Vertex<sp/>shader)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>m.loadToShader(</highlight><highlight class="stringliteral">&quot;material&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam3f(</highlight><highlight class="stringliteral">&quot;viewerPos&quot;</highlight><highlight class="normal">,camcam-&gt;getEye().m_x,camcam-&gt;getEye().m_y,camcam-&gt;getEye().m_z);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParamFromVec4(</highlight><highlight class="stringliteral">&quot;light.position&quot;</highlight><highlight class="normal">,<sp/>camcam-&gt;getEye());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParamFromVec4(</highlight><highlight class="stringliteral">&quot;light.diffuse&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec4(1.0,1.0,1.0,1.0));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/>shader-&gt;setUniform(</highlight><highlight class="stringliteral">&quot;light.ambient&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec4(1.0,0.9,0.5,1.0));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>shader-&gt;setUniform(</highlight><highlight class="stringliteral">&quot;light.specular&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec4(0.5,0.5,0.5,1.0));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>camcam;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam3f(</highlight><highlight class="stringliteral">&quot;skyColour&quot;</highlight><highlight class="normal">,<sp/><ref refid="_n_g_l_draw_8cpp_1a6e87b77363231829c6f99c29a2904e7b" kindref="member">Sky_RED</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1af53c11fc7d7125611545a3c5a87ebd23" kindref="member">Sky_GREEN</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1a0f58e79684a2994414a304aae4ea869e" kindref="member">Sky_BLUE</ref>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>disintegration<sp/>thresholds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;LowThreshold&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a12e270822580926e2978f8b8fb147716" kindref="member">increaseLowThreshold</ref>());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;HighThreshold&quot;</highlight><highlight class="normal">,<sp/>0.7);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>GLuint<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>shader-&gt;getProgramID(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>our<sp/>links<sp/>to<sp/>our<sp/>various<sp/>subroutine<sp/>functions<sp/>in<sp/>the<sp/>fragment<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aadddc98fe44730a87410176ac53182b8" kindref="member">m_subroutines</ref>[0]<sp/>=<sp/>glGetSubroutineIndex(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>GL_FRAGMENT_SHADER,<sp/></highlight><highlight class="stringliteral">&quot;recordDepth&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aadddc98fe44730a87410176ac53182b8" kindref="member">m_subroutines</ref>[1]<sp/>=<sp/>glGetSubroutineIndex(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>GL_FRAGMENT_SHADER,<sp/></highlight><highlight class="stringliteral">&quot;shadeWithShadow&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aadddc98fe44730a87410176ac53182b8" kindref="member">m_subroutines</ref>[2]<sp/>=<sp/>glGetSubroutineIndex(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>GL_FRAGMENT_SHADER,<sp/></highlight><highlight class="stringliteral">&quot;shadeWithDisintegrate&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>array<sp/>of<sp/>multiple<sp/>textures</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>glGenTextures(2,<sp/><ref refid="class_n_g_l_draw_1adb5b6f9dfcb4b370b7c8503f0782a1bf" kindref="member">m_TextureID</ref>);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>create<sp/>our<sp/>FBO<sp/>and<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a45a8557f4a2ef22ca853c08cd81c8f8a" kindref="member">createFramebufferObject</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a506cd1c55e9fe3d32d72cf3be2374833" kindref="member">makeNoise</ref>(15.15f,<sp/>1.52f);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa883399a6be3eacc3bb79a2319b0fb0e" kindref="member">m_coinMesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/coin.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa883399a6be3eacc3bb79a2319b0fb0e" kindref="member">m_coinMesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>textures<sp/>units<sp/>to<sp/>Phong<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;ShadowMap&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;NoiseMap&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//set<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;setGravity(ngl::Vec3(0,(-9.8*<ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>),0));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//creating<sp/>level<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_1&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_2Platform&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_2_part_1&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_2_part_2&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_2_part_3a&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-10,0));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_2_part_3b&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-30,0));</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_3&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-60,0));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_4_part_1&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-70,0));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_4_part_2&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-70,0));</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_5Stick&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-70,0));</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;level_5&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-70,0));</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;createLevel(</highlight><highlight class="stringliteral">&quot;finish&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,-70,0));</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a502ae0e27451fe9dfb65451dd424d645" kindref="member">addSphere</ref>(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>2);<sp/></highlight><highlight class="comment">//collission<sp/>sphere<sp/>for<sp/>camera</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;createCharacter(ngl::Vec3(45,3,0));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>ngl::VAOPrimitives<sp/>*prim<sp/>=<sp/>ngl::VAOPrimitives::instance();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a24eb5a13796d850b994806d7dde79540" kindref="member">m_larryMesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/sphereChar.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a24eb5a13796d850b994806d7dde79540" kindref="member">m_larryMesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>prim-&gt;createSphere(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>,2,40);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>prim-&gt;createTrianglePlane(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">,20,20,200,200,ngl::Vec3(0,1,0));</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//create<sp/>VAO<sp/>for<sp/>level<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a1718f004c68d6369c30ce97f37568729" kindref="member">m_level1Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_1.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a1718f004c68d6369c30ce97f37568729" kindref="member">m_level1Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a1d9c617a443d037e09b6c081fc1a004e" kindref="member">m_level2_1Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_2_part_1.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a1d9c617a443d037e09b6c081fc1a004e" kindref="member">m_level2_1Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a9a9db52fc3f4009fb2ed6d3d3bcc18ce" kindref="member">m_level2_2Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_2_part_2.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a9a9db52fc3f4009fb2ed6d3d3bcc18ce" kindref="member">m_level2_2Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a9e17d6d1fd9c2b56fb5c6eaf93f02b54" kindref="member">m_level2_3aMesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_2_part_3a.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a9e17d6d1fd9c2b56fb5c6eaf93f02b54" kindref="member">m_level2_3aMesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac244ab08b9f1de2fef2a4adc10915a33" kindref="member">m_level2_3bMesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_2_part_3b.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac244ab08b9f1de2fef2a4adc10915a33" kindref="member">m_level2_3bMesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a615507ccce3f3811712306431129f23a" kindref="member">m_level3Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_3.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a615507ccce3f3811712306431129f23a" kindref="member">m_level3Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6e11331f5c471eb40c240fe48393001b" kindref="member">m_level4_1Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_4_part_1.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6e11331f5c471eb40c240fe48393001b" kindref="member">m_level4_1Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a7a1c0603f362e7d970540e4c40f668a1" kindref="member">m_level4_2Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_4_part_2.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a7a1c0603f362e7d970540e4c40f668a1" kindref="member">m_level4_2Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af9898b9333424acd82ec0010d7f51c4e" kindref="member">m_level5Stick</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_5_sticky.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af9898b9333424acd82ec0010d7f51c4e" kindref="member">m_level5Stick</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac68796c07ab55611f5f45573206b6582" kindref="member">m_level5Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_5.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac68796c07ab55611f5f45573206b6582" kindref="member">m_level5Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa361867facb23c51e19c714ca019040b" kindref="member">m_finish</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/finish_line.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa361867facb23c51e19c714ca019040b" kindref="member">m_finish</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>in<sp/>the<sp/>animation<sp/>data<sp/>for<sp/>our<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>-&gt;loadAnimationData(<ref refid="_animation_8h_1afc269ae202f54df81320fe5fe37caa44aeeaa1347515c2724fe4bac0ebf6ab89e" kindref="member">animType::CHAR_TYPE</ref>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>inital<sp/>animation<sp/>cycle<sp/>to<sp/>rest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>-&gt;setAnimationTo(<ref refid="_animation_8h_1adb300d88138d1dab49b16e9706f211b5a50780f47f6839d47d60bc4555ee00c3f" kindref="member">animCycle::REST</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>the<sp/>character<sp/>animation<sp/>data<sp/>to<sp/>the<sp/>character<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>-&gt;attachAnimToMesh(<ref refid="class_n_g_l_draw_1a24eb5a13796d850b994806d7dde79540" kindref="member">m_larryMesh</ref>,<ref refid="_animation_8h_1afc269ae202f54df81320fe5fe37caa44aeeaa1347515c2724fe4bac0ebf6ab89e" kindref="member">animType::CHAR_TYPE</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//load<sp/>in<sp/>the<sp/>animation<sp/>data<sp/>for<sp/>the<sp/>coins<sp/>and<sp/>attach<sp/>to<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>-&gt;loadAnimationData(<ref refid="_animation_8h_1afc269ae202f54df81320fe5fe37caa44a74c520823d817368fde963836ab62b77" kindref="member">animType::COIN_TYPE</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>-&gt;setAnimationTo(<ref refid="_animation_8h_1adb300d88138d1dab49b16e9706f211b5add6c30845bb26cf9caf2e3968192947d" kindref="member">animCycle::COIN_REST</ref>);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ab01337737d1ae553473be30c3ff74bdc" kindref="member">m_animation</ref>-&gt;attachAnimToMesh(<ref refid="class_n_g_l_draw_1aa883399a6be3eacc3bb79a2319b0fb0e" kindref="member">m_coinMesh</ref>,<ref refid="_animation_8h_1afc269ae202f54df81320fe5fe37caa44a74c520823d817368fde963836ab62b77" kindref="member">animType::COIN_TYPE</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//create<sp/>VAOs<sp/>for<sp/>the<sp/>platform<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ae2ac8ef6e024b3d17722bc2a6834ec77" kindref="member">m_platformMesh_platform</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/platform_mesh.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ae2ac8ef6e024b3d17722bc2a6834ec77" kindref="member">m_platformMesh_platform</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2564668f371aedc1e5ee2c56bf2441da" kindref="member">m_platformMesh_bouncePad</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_1_bounce_platform.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2564668f371aedc1e5ee2c56bf2441da" kindref="member">m_platformMesh_bouncePad</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a73ebf7484f9d663227ee2ffc8edc5edd" kindref="member">m_platformMesh_barrier01</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/barrier_01.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a73ebf7484f9d663227ee2ffc8edc5edd" kindref="member">m_platformMesh_barrier01</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a84af750a20197acd58c50b3d6cad526a" kindref="member">m_level4RotPlatformMesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_4_rotating_platform.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a84af750a20197acd58c50b3d6cad526a" kindref="member">m_level4RotPlatformMesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af527b0abeed73c7e1d0fc2b26a6896b0" kindref="member">m_level4Bridge1Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_4_bridge_half.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af527b0abeed73c7e1d0fc2b26a6896b0" kindref="member">m_level4Bridge1Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aed9b51e9e0d47a4ed83d5a3c5d9248c7" kindref="member">m_level4Bridge2Mesh</ref>.reset(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ngl::Obj(</highlight><highlight class="stringliteral">&quot;models/level_4_bridge_half2.obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aed9b51e9e0d47a4ed83d5a3c5d9248c7" kindref="member">m_level4Bridge2Mesh</ref>-&gt;createVAO();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>changing<sp/>size<sp/>of<sp/>pshere<sp/>need<sp/>to<sp/>change<sp/>stuff<sp/>in<sp/>addSphere<sp/>method,<sp/>the<sp/>Y<sp/>property</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1add599b7da4202fb060a1060f020d4c9f" kindref="member">addBox</ref>(</highlight><highlight class="stringliteral">&quot;cube&quot;</highlight><highlight class="normal">,1.0f,1.0f,1.0f);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>camera<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>centre(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>));</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>result(centre.m_x<sp/>+<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">getDistance</ref>()<sp/>*<sp/>cos(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aeb2fffe048b65431de6b2beccdb34135" kindref="member">getAngle</ref>()),centre.m_y+10,(centre.m_z<sp/>+<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">getDistance</ref>()<sp/>*<sp/>sin(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aeb2fffe048b65431de6b2beccdb34135" kindref="member">getAngle</ref>())),0);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;addSphere(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>result.toVec3(),<sp/>0.5,<sp/>ngl::Vec3(0,0,0),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;setGravityForBody(</highlight><highlight class="stringliteral">&quot;camSphere&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>main<sp/>ground<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>prim-&gt;createTrianglePlane(</highlight><highlight class="stringliteral">&quot;plane&quot;</highlight><highlight class="normal">,40,40,300,300,ngl::Vec3(0,1,0));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>(*shader)[</highlight><highlight class="stringliteral">&quot;nglTextShader&quot;</highlight><highlight class="normal">]-&gt;use();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1.0,0.0,0.0);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>platform<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos1(-243,-10,-80);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos2(-263,-10,-100);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos3(-223,-10,-110);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos4(-47.984,-20.136,0);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos5(-80.08,-20.136,0);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos6(-152.12,-20.04,-162.931);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos9(-130,-158,-454);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos10(-130,-154,-546);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos11(-130,-154,-610);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>platPos12(-90,-140,-763.7);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>platforms<sp/>by<sp/>calling<sp/>the<sp/>platform<sp/>factory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos1,</highlight><highlight class="stringliteral">&quot;movingPlatform01&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7addacb58043038c6070505710c73516c8" kindref="member">PlatType::MOVE_PLATE</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos2,</highlight><highlight class="stringliteral">&quot;movingPlatform02&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7addacb58043038c6070505710c73516c8" kindref="member">PlatType::MOVE_PLATE</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos3,</highlight><highlight class="stringliteral">&quot;movingPlatform03&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7addacb58043038c6070505710c73516c8" kindref="member">PlatType::MOVE_PLATE</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos12,</highlight><highlight class="stringliteral">&quot;movingPlatform04&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7addacb58043038c6070505710c73516c8" kindref="member">PlatType::MOVE_PLATE</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos4,</highlight><highlight class="stringliteral">&quot;bouncePlatform01&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a089b531152ee4090896c6afa68e3fd31" kindref="member">PlatType::BOUNCE_PAD</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos5,</highlight><highlight class="stringliteral">&quot;bouncePlatform02&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a089b531152ee4090896c6afa68e3fd31" kindref="member">PlatType::BOUNCE_PAD</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos6,</highlight><highlight class="stringliteral">&quot;barrierPlatform01&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a6bf4e51ca30dba9c0f27ae31e6e78e91" kindref="member">PlatType::BARRIER01</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos9,</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a8a2a27fa0925406ded2322c372b89d86" kindref="member">PlatType::ROTATING_L</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos10,</highlight><highlight class="stringliteral">&quot;bridge01&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a3bdf1cb21c092d90f750f07e60af6410" kindref="member">PlatType::BRIDGE_1</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;createPlatform(platPos11,</highlight><highlight class="stringliteral">&quot;bridge02&quot;</highlight><highlight class="normal">,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a3e6d430567f07a9658bf8b32003da464" kindref="member">PlatType::BRIDGE_2</ref>,<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>in<sp/>coin<sp/>position<sp/>data<sp/>from<sp/>txt<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;readCoinPosData();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>init<sp/>coin<sp/>global<sp/>score<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;setCoinScore();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>the<sp/>number<sp/>of<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getNumCoins();<sp/>i++)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>coins<sp/>through<sp/>the<sp/>coin<sp/>factory,<sp/>assigning<sp/>the<sp/>correct<sp/>position<sp/>from<sp/>the<sp/>coinPosList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;createCoin(<ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getCoinPos(i),std::to_string(i),<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//setup<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;readTriggerPosData();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;createTriggerFromFile();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;readCoinPosData();</highlight></codeline>
<codeline lineno="299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="class_n_g_l_draw_1a12e270822580926e2978f8b8fb147716" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a12e270822580926e2978f8b8fb147716" kindref="member">NGLDraw::increaseLowThreshold</ref>()</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a05a473f304a608ae3d0fc264f7670a31" kindref="member">m_lowThresholdKey</ref><sp/>+=<sp/>0.05f;</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="class_n_g_l_draw_1a5fd365ceef761c0f00f9ee81814e7c59" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a5fd365ceef761c0f00f9ee81814e7c59" kindref="member">NGLDraw::increaseCoinColour</ref>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a543f742c2f32f586c366a87b9f6e1864" kindref="member">m_coinColour</ref><sp/>+=<sp/>0.075;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310" refid="class_n_g_l_draw_1af307e10fea4e3d0500b0d97f406bf30b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1af307e10fea4e3d0500b0d97f406bf30b" kindref="member">NGLDraw::resetLowThreshold</ref>()</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a05a473f304a608ae3d0fc264f7670a31" kindref="member">m_lowThresholdKey</ref><sp/>*=<sp/>0.0f;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="class_n_g_l_draw_1ae6223efa76b661563f20216adb4f474d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1ae6223efa76b661563f20216adb4f474d" kindref="member">NGLDraw::resetCoinColour</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a543f742c2f32f586c366a87b9f6e1864" kindref="member">m_coinColour</ref><sp/>*=<sp/>0.0f;</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_n_g_l_draw_1a506cd1c55e9fe3d32d72cf3be2374833" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a506cd1c55e9fe3d32d72cf3be2374833" kindref="member">NGLDraw::makeNoise</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_freq,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>m_scale)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------------<sp/>Noise<sp/>Texture<sp/>---------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>a<sp/>and<sp/>b<sp/>for<sp/>freq<sp/>and<sp/>scale,<sp/>we<sp/>pass<sp/>these<sp/>in<sp/>to<sp/>the<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>4<sp/>noise<sp/>values<sp/>in<sp/>a<sp/>single<sp/>2D<sp/>texture.<sp/>store<sp/>perlin<sp/>noise<sp/>with<sp/>1<sp/>octave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>1st<sp/>component(red<sp/>channel),<sp/>two<sp/>octaves<sp/>in<sp/>the<sp/>green<sp/>channel,<sp/>3<sp/>blue,<sp/>4<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width_noise_tex<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height_noise_tex<sp/>=<sp/>512;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/>GLubyte<sp/>*data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>GLubyte[<sp/>width_noise_tex<sp/>*<sp/>height_noise_tex<sp/>*<sp/>4<sp/>];</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>xFactor<sp/>=<sp/>1.0f<sp/>/<sp/>(width_noise_tex<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>yFactor<sp/>=<sp/>1.0f<sp/>/<sp/>(height_noise_tex<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//animate<sp/>texture<sp/>along<sp/>x<sp/>axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//float<sp/>incrementFreqPos<sp/>=<sp/>increaseLowThreshold();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>height_noise_tex;<sp/>row++)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>width_noise_tex;<sp/>col++)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x<sp/>=<sp/>xFactor<sp/>*<sp/>col;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>yFactor<sp/>*<sp/>row;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>m_freq;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>m_scale;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Computer<sp/>sum<sp/>for<sp/>each<sp/>octave<sp/>of<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oct<sp/>=<sp/>0;<sp/>oct<sp/>&lt;<sp/>4;<sp/>oct++)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glm::vec2<sp/>p(x<sp/>*<sp/>freq,<sp/>y<sp/>*<sp/>freq);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>glm<sp/>library<sp/>perlin<sp/>noise,<sp/>returns<sp/>float<sp/>between<sp/>-1,<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>glm::perlin(p)<sp/>/<sp/>scale;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>val;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>(sum<sp/>+<sp/>1.0f)<sp/>/<sp/>2.0f;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>in<sp/>texture<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[((row<sp/>*<sp/>width_noise_tex<sp/>+<sp/>col)<sp/>*<sp/>4)<sp/>+<sp/>oct]<sp/>=<sp/>(GLubyte)<sp/>(result<sp/>*<sp/>255.0f);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;data<sp/>noise<sp/>tex:<sp/>&quot;<sp/>&lt;&lt;<sp/>result<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freq<sp/>*=<sp/>2.0f;<sp/></highlight><highlight class="comment">//<sp/>Double<sp/>the<sp/>freq<sp/>for<sp/>each<sp/>octave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>*=<sp/>m_scale;<sp/></highlight><highlight class="comment">//<sp/>Next<sp/>power<sp/>of<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE1);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_n_g_l_draw_1adb5b6f9dfcb4b370b7c8503f0782a1bf" kindref="member">m_TextureID</ref>[1]);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_NEAREST);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_NEAREST_MIPMAP_NEAREST);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/>glTexImage2D(GL_TEXTURE_2D,<sp/>0,<sp/>GL_RGBA,<sp/>width_noise_tex,<sp/>height_noise_tex,<sp/>0,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>data);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>glGenerateMipmap(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;noise<sp/>tex<sp/>done&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//glTexSubImage2D(GL_TEXTURE_2D,<sp/>0,<sp/>0,<sp/>0,<sp/>width_noise_tex,<sp/>height_noise_tex,<sp/>GL_RGBA,<sp/>GL_UNSIGNED_BYTE,<sp/>data);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>data;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378" refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">NGLDraw::shaderType</ref>(std::string<sp/>_shaderName,<sp/>ngl::Vec3<sp/>_shaderColour,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stripe,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>shine,<sp/>ngl::Transformation<sp/>&amp;_trans)</highlight></codeline>
<codeline lineno="379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_shaderName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Debug&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//debug<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;DebugShader&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MV;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MVP;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat3<sp/>normalMatrix;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>M;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M<sp/>=<sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MV=<sp/><sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aef53a322f457d7524838961257a9209e" kindref="member">getViewMatrix</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MVP=<sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a376f5df8168b969cea49fea6b7881160" kindref="member">getVPMatrix</ref>();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix=MV;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix.inverse();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">,MVP);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_shaderName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Shadow&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//shader<sp/>for<sp/>the<sp/>shadow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>numActiveUniforms;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramStageiv(shader-&gt;getProgramID(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">),<sp/>GL_FRAGMENT_SHADER,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS,<sp/>&amp;numActiveUniforms);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glUniformSubroutinesuiv(GL_FRAGMENT_SHADER,numActiveUniforms,<sp/>&amp;<ref refid="class_n_g_l_draw_1aadddc98fe44730a87410176ac53182b8" kindref="member">m_subroutines</ref>[0]);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MVP<sp/>=<sp/>_trans.getMatrix()<sp/>*<sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.getVPMatrix();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">,MVP);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_shaderName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//shader<sp/>for<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>numActiveUniforms;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramStageiv(shader-&gt;getProgramID(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">),<sp/>GL_FRAGMENT_SHADER,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS,<sp/>&amp;numActiveUniforms);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glUniformSubroutinesuiv(GL_FRAGMENT_SHADER,numActiveUniforms,&amp;<ref refid="class_n_g_l_draw_1aadddc98fe44730a87410176ac53182b8" kindref="member">m_subroutines</ref>[1]);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MV;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MVP;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat3<sp/>normalMatrix;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>M;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M=_trans.getMatrix()*<ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MV=<sp/><sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aef53a322f457d7524838961257a9209e" kindref="member">getViewMatrix</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MVP=<sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a376f5df8168b969cea49fea6b7881160" kindref="member">getVPMatrix</ref>();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix=MV;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix.inverse();</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,M);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MV&quot;</highlight><highlight class="normal">,MV);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">,MVP);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat3(</highlight><highlight class="stringliteral">&quot;normalMatrix&quot;</highlight><highlight class="normal">,normalMatrix);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setUniform(</highlight><highlight class="stringliteral">&quot;material.diffuse&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec4(_shaderColour.m_x,<sp/>_shaderColour.m_y,<sp/>_shaderColour.m_z,<sp/>1.0));</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setRegisteredUniform1f(</highlight><highlight class="stringliteral">&quot;material.shininess&quot;</highlight><highlight class="normal">,<sp/>shine);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;checker&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>bias;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias.scale(0.5,0.5,0.5);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias.translate(0.5,0.5,0.5);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>view<sp/>=<sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.getViewMatrix();</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>proj<sp/>=<sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.getProjectionMatrix();</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>model<sp/>=<sp/><ref refid="class_n_g_l_draw_1a44340660ec3113265933e247440a3d67" kindref="member">m_transform</ref>.getMatrix();</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>textureMatrix=<sp/>model<sp/>*<sp/>view<sp/>*<sp/>proj<sp/>*<sp/>bias;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;textureMatrix&quot;</highlight><highlight class="normal">,textureMatrix);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stripe<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;stripeBool&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;stripeBool&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_shaderName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Disintegrate&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disintegrate<sp/>shader<sp/>load<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GLsizei<sp/>numActiveUniforms;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glGetProgramStageiv(shader-&gt;getProgramID(</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">),<sp/>GL_FRAGMENT_SHADER,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS,<sp/>&amp;numActiveUniforms);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>glUniformSubroutinesuiv(GL_FRAGMENT_SHADER,numActiveUniforms,&amp;<ref refid="class_n_g_l_draw_1aadddc98fe44730a87410176ac53182b8" kindref="member">m_subroutines</ref>[2]);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MV;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MVP;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat3<sp/>normalMatrix;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>M;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M=_trans.getMatrix()*<ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MV=<sp/><sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aef53a322f457d7524838961257a9209e" kindref="member">getViewMatrix</ref>();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MVP=<sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a376f5df8168b969cea49fea6b7881160" kindref="member">getVPMatrix</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix=MV;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix.inverse();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;M&quot;</highlight><highlight class="normal">,M);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MV&quot;</highlight><highlight class="normal">,MV);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">,MVP);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat3(</highlight><highlight class="stringliteral">&quot;normalMatrix&quot;</highlight><highlight class="normal">,normalMatrix);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setUniform(</highlight><highlight class="stringliteral">&quot;material.diffuse&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec4(_shaderColour.m_x,<sp/>_shaderColour.m_y,<sp/>_shaderColour.m_z,<sp/>1.0));</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stripe<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;stripeBool&quot;</highlight><highlight class="normal">,1);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;stripeBool&quot;</highlight><highlight class="normal">,0);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>bias;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias.scale(0.5,0.5,0.5);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bias.translate(0.5,0.5,0.5);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>view<sp/>=<sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.getViewMatrix();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>proj<sp/>=<sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.getProjectionMatrix();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>model<sp/>=<sp/><ref refid="class_n_g_l_draw_1a44340660ec3113265933e247440a3d67" kindref="member">m_transform</ref>.getMatrix();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>textureMatrix=<sp/>model<sp/>*<sp/>view<sp/>*<sp/>proj<sp/>*<sp/>bias;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;textureMatrix&quot;</highlight><highlight class="normal">,textureMatrix);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;LowThreshold&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a12e270822580926e2978f8b8fb147716" kindref="member">increaseLowThreshold</ref>());</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1f(</highlight><highlight class="stringliteral">&quot;HighThreshold&quot;</highlight><highlight class="normal">,<sp/>0.7);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_shaderName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>shader<sp/>for<sp/>the<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;use(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MV;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>MVP;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat3<sp/>normalMatrix;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Mat4<sp/>M;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>M=_trans.getMatrix()*<ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MV=<sp/><sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aef53a322f457d7524838961257a9209e" kindref="member">getViewMatrix</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MVP=<sp/>M*<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a376f5df8168b969cea49fea6b7881160" kindref="member">getVPMatrix</ref>();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix=MV;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>normalMatrix.inverse();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat4(</highlight><highlight class="stringliteral">&quot;MVP&quot;</highlight><highlight class="normal">,MVP);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParamFromMat3(</highlight><highlight class="stringliteral">&quot;normalMatrix&quot;</highlight><highlight class="normal">,normalMatrix);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam4f(</highlight><highlight class="stringliteral">&quot;inColour&quot;</highlight><highlight class="normal">,<sp/>_shaderColour.m_x,<sp/>_shaderColour.m_y,<sp/>_shaderColour.m_z,<sp/>1.0);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68a2ef17374b678bc6bae8ea72a06648" kindref="member">increaseShaderTime</ref>());</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_shaderName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Finish&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shader-&gt;setShaderParam1i(</highlight><highlight class="stringliteral">&quot;checker&quot;</highlight><highlight class="normal">,<sp/>1);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527" refid="_n_g_l_draw_8cpp_1a795c922bb6141b030644592fcffa850b" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1a795c922bb6141b030644592fcffa850b" kindref="member">TEXTURE_WIDTH</ref>=1024;</highlight></codeline>
<codeline lineno="528" refid="_n_g_l_draw_8cpp_1adc64a996fed3c125c1e9f6c055ce644f" refkind="member"><highlight class="normal">constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_n_g_l_draw_8cpp_1adc64a996fed3c125c1e9f6c055ce644f" kindref="member">TEXTURE_HEIGHT</ref>=1024;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530" refid="class_n_g_l_draw_1af711def4043fa15686998fca20f0697b" refkind="member"><highlight class="normal"><ref refid="class_n_g_l_draw_1af711def4043fa15686998fca20f0697b" kindref="member">NGLDraw::~NGLDraw</ref>()</highlight></codeline>
<codeline lineno="531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Shutting<sp/>down<sp/>NGL,<sp/>removing<sp/>VAO&apos;s<sp/>and<sp/>Shaders\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1ac9b771b3fe87d387319e4a779f4cc4e6" kindref="member">m_light</ref>;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="class_n_g_l_draw_1ae5151dc189fd5de5649b72c5e76bcf47" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1ae5151dc189fd5de5649b72c5e76bcf47" kindref="member">NGLDraw::resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_h)</highlight></codeline>
<codeline lineno="539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>glViewport(0,0,_w,_h);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>set<sp/>the<sp/>camera<sp/>size<sp/>values<sp/>as<sp/>the<sp/>screen<sp/>size<sp/>has<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1ae8ed31422d897f6a8df266048beb14ea" kindref="member">setShape</ref>(45,(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)_w/_h,0.05,350);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setScreenSize(_w,_h);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref><sp/>=<sp/>_w;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref><sp/>=<sp/>_h;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aec8a377329da67db1e2ef007bd27f026" kindref="member">draw</ref>();</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549" refid="class_n_g_l_draw_1ad3e4e95bd10a6590c083e3925a9570a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1ad3e4e95bd10a6590c083e3925a9570a0" kindref="member">NGLDraw::drawDepth</ref>()</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>culling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/>glEnable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>FBO<sp/>and<sp/>render<sp/>offscreen<sp/>to<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<ref refid="class_n_g_l_draw_1adfd2f8c8485a8ec074f5f6e0275b8584" kindref="member">m_fboID</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>texture<sp/>object<sp/>to<sp/>0<sp/>(off<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,0);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>render<sp/>to<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the<sp/>texture<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>distortions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>glViewport(0,0,<ref refid="_n_g_l_draw_8cpp_1a795c922bb6141b030644592fcffa850b" kindref="member">TEXTURE_WIDTH</ref>,<ref refid="_n_g_l_draw_8cpp_1adc64a996fed3c125c1e9f6c055ce644f" kindref="member">TEXTURE_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>previous<sp/>frame<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/>glClear(<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>we<sp/>are<sp/>only<sp/>rendering<sp/>depth<sp/>turn<sp/>off<sp/>the<sp/>colour<sp/>/<sp/>alpha</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/>glColorMask(GL_FALSE,<sp/>GL_FALSE,<sp/>GL_FALSE,<sp/>GL_FALSE);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>render<sp/>only<sp/>the<sp/>back<sp/>faces<sp/>so<sp/>we<sp/>don&apos;t<sp/>get<sp/>too<sp/>much<sp/>self<sp/>shadowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/>glCullFace(GL_FRONT);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>grab<sp/>an<sp/>instance<sp/>of<sp/>the<sp/>shader<sp/>manager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>ngl::ShaderLib<sp/>*shader=ngl::ShaderLib::instance();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/>(*shader)[</highlight><highlight class="stringliteral">&quot;Phong&quot;</highlight><highlight class="normal">]-&gt;use();</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//shader-&gt;setUniform(&quot;material.diffuse&quot;,<sp/>ngl::Vec4(1,<sp/>1,<sp/>0,<sp/>1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/>based<sp/>on<sp/>the<sp/>mouse<sp/>position<sp/>for<sp/>our<sp/>global<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/>ngl::Mat4<sp/>rotX;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/>ngl::Mat4<sp/>rotY;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>rotation<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/>rotX.rotateX(<ref refid="class_n_g_l_draw_1a333a68dffb2f17de902059bdde7d1d55" kindref="member">m_spinXFace</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/>rotY.rotateY(<ref refid="class_n_g_l_draw_1a18af23a99a457663dd95efeb7e7b3455" kindref="member">m_spinYFace</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>the<sp/>rotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>=rotX;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>translations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>.m_m[3][0]<sp/>=<sp/><ref refid="class_n_g_l_draw_1a402443700f5c74bc715fc4959dc3d748" kindref="member">m_modelPos</ref>.m_x;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>.m_m[3][1]<sp/>=<sp/><ref refid="class_n_g_l_draw_1a402443700f5c74bc715fc4959dc3d748" kindref="member">m_modelPos</ref>.m_y;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>.m_m[3][2]<sp/>=<sp/><ref refid="class_n_g_l_draw_1a402443700f5c74bc715fc4959dc3d748" kindref="member">m_modelPos</ref>.m_z;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/>ngl::VAOPrimitives<sp/>*prim=ngl::VAOPrimitives::instance();</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw<sp/>character<sp/>for<sp/>SHADOW<sp/>pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//shader-&gt;setUniform(&quot;material.diffuse&quot;,<sp/>ngl::Vec4(0,<sp/>0,<sp/>0.7,<sp/>1));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ac2647997902ce9c0d95da2f70bd6e3f4" kindref="member">m_trans_sphere</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Shadow&quot;</highlight><highlight class="normal">,<sp/><sp/>ngl::Vec3(0.0,<sp/>0.0,<sp/>0.0),0,0,<sp/><ref refid="class_n_g_l_draw_1ac2647997902ce9c0d95da2f70bd6e3f4" kindref="member">m_trans_sphere</ref>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prim-&gt;draw(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>vel(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getLinVelocity(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>pos(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos[1]<sp/>-=2.5;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>.setPosition(pos);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel[1]<sp/>=0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vel.length()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>vel.length()<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>rotation<sp/>for<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.normalize();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref><sp/>=<sp/>atan2(vel.m_x,<sp/>vel.m_z);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref><sp/>*=180/ngl::PI;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref><sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref>+=<sp/>360.0f;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>rotator(0,<ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref>,0);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_prevRot<sp/>=<sp/>comb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>.setRotation(rotator);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Shadow&quot;</highlight><highlight class="normal">,<sp/><sp/>ngl::Vec3(0.0,<sp/>0.0,<sp/>0.0),0,0,<sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a24eb5a13796d850b994806d7dde79540" kindref="member">m_larryMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw<sp/>level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Shadow&quot;</highlight><highlight class="normal">,<sp/><sp/>ngl::Vec3(0.0,<sp/>0.0,<sp/>0.0),0,0,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>name<sp/>of<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1ae19b3c8112edf783476dd2197baa4a36" kindref="member">getLook</ref>()<sp/>-<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a3b565fb6a9ec8aab39fb5f57ee188a0d" kindref="member">getEye</ref>());</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setCameraInfo(dir);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1ab65565a0e02bd33806d264c972ed083d" kindref="member">updatePos</ref>(name);</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="class_n_g_l_draw_1aec8a377329da67db1e2ef007bd27f026" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1aec8a377329da67db1e2ef007bd27f026" kindref="member">NGLDraw::draw</ref>()</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//store<sp/>name<sp/>of<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/>std::string<sp/>name;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>lightCamera<sp/>(for<sp/>depth<sp/>mapping)<sp/>position<sp/>above<sp/>the<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>to<sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(name);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>up(1,0,0);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref><sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(name);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>.m_y+=20;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>.m_x+=5;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>.m_z+=8;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ae0d2ccebcc1114e321080e2045fa9800" kindref="member">m_lightCamera</ref>.set(<ref refid="class_n_g_l_draw_1af2daf6d1bcb30bd6a44c349a68040d5f" kindref="member">m_lightPosition</ref>,to,up);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>--------<sp/>Pass<sp/>1<sp/>--------------///</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>call<sp/>the<sp/>depth<sp/>pass<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ad3e4e95bd10a6590c083e3925a9570a0" kindref="member">drawDepth</ref>();</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Pass<sp/>2<sp/>use<sp/>the<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>we<sp/>have<sp/>created<sp/>the<sp/>texture<sp/>for<sp/>shadows<sp/>render<sp/>the<sp/>scene<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Here<sp/>we<sp/>also<sp/><sp/>bind<sp/>to<sp/>the<sp/>default<sp/>framebuffer,<sp/>disable<sp/>culling,<sp/>and<sp/>select<sp/>the<sp/>subroutine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>shadeWithShadow,<sp/>and<sp/>draw<sp/>the<sp/>scene</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>go<sp/>back<sp/>to<sp/>our<sp/>normal<sp/>framebuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,0);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>viewport<sp/>to<sp/>the<sp/>screen<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Gareth<sp/>change<sp/>this!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/>glViewport(0,0,<ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref>,<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>glViewport(0,<sp/>0,<sp/>m_w()<sp/>*<sp/>devicePixelRatio(),<sp/>m_h()<sp/>*<sp/>devicePixelRatio());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>colour<sp/>rendering<sp/>again<sp/>(as<sp/>we<sp/>turned<sp/>it<sp/>off<sp/>earlier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/>glColorMask(GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE,<sp/>GL_TRUE);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>the<sp/>screen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/>glClear(GL_COLOR_BUFFER_BIT<sp/>|<sp/>GL_DEPTH_BUFFER_BIT);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>noise<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE1);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_n_g_l_draw_1adb5b6f9dfcb4b370b7c8503f0782a1bf" kindref="member">m_TextureID</ref>[1]);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>to<sp/>generate<sp/>the<sp/>mip<sp/>maps<sp/>each<sp/>time<sp/>we<sp/>bind</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>glGenerateMipmap(GL_TEXTURE_2D);</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>only<sp/>cull<sp/>back<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/>glDisable(GL_CULL_FACE);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/>glCullFace(GL_BACK);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotation<sp/>based<sp/>on<sp/>the<sp/>mouse<sp/>position<sp/>for<sp/>our<sp/>global<sp/>transform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/>ngl::Mat4<sp/>rotX;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/>ngl::Mat4<sp/>rotY;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>rotation<sp/>matrices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>rotX.rotateX(<ref refid="class_n_g_l_draw_1a333a68dffb2f17de902059bdde7d1d55" kindref="member">m_spinXFace</ref>);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/>rotY.rotateY(<ref refid="class_n_g_l_draw_1a18af23a99a457663dd95efeb7e7b3455" kindref="member">m_spinYFace</ref>);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>multiply<sp/>the<sp/>rotations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>=rotX;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>translations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>.m_m[3][0]<sp/>=<sp/><ref refid="class_n_g_l_draw_1a402443700f5c74bc715fc4959dc3d748" kindref="member">m_modelPos</ref>.m_x;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>.m_m[3][1]<sp/>=<sp/><ref refid="class_n_g_l_draw_1a402443700f5c74bc715fc4959dc3d748" kindref="member">m_modelPos</ref>.m_y;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1add58d5447775b9c8eef3cbd6a45d2581" kindref="member">m_mouseGlobalTX</ref>.m_m[3][2]<sp/>=<sp/><ref refid="class_n_g_l_draw_1a402443700f5c74bc715fc4959dc3d748" kindref="member">m_modelPos</ref>.m_z;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/>ngl::VAOPrimitives<sp/>*prim=ngl::VAOPrimitives::instance();</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bind<sp/>the<sp/>noise<sp/>texture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_n_g_l_draw_1adb5b6f9dfcb4b370b7c8503f0782a1bf" kindref="member">m_TextureID</ref>[0]);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ac2647997902ce9c0d95da2f70bd6e3f4" kindref="member">m_trans_sphere</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>character<sp/>hits<sp/>the<sp/>box<sp/>then<sp/>it<sp/>will<sp/>apply<sp/>Disintegrate<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;dis_1&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/><sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;dis_2&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;dis_3&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>))</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>DEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1.0,0.0,0.0);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(620,250,</highlight><highlight class="stringliteral">&quot;DEAD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Disintegrate&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,<sp/>0.5,<sp/>0.6),1,200,<sp/><ref refid="class_n_g_l_draw_1ac2647997902ce9c0d95da2f70bd6e3f4" kindref="member">m_trans_sphere</ref>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1af307e10fea4e3d0500b0d97f406bf30b" kindref="member">resetLowThreshold</ref>();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,<sp/>0.5,<sp/>0.6),1,200,<sp/><ref refid="class_n_g_l_draw_1ac2647997902ce9c0d95da2f70bd6e3f4" kindref="member">m_trans_sphere</ref>);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prim-&gt;draw(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//get<sp/>character<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>vel(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getLinVelocity(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>));</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>pos(<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>));</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos[1]<sp/>-=2.5;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>.setPosition(pos);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vel[1]<sp/>=0;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vel.length()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>vel.length()<sp/>&gt;<sp/>4)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>the<sp/>rotation<sp/>of<sp/>the<sp/>second<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel.normalize();</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref><sp/>=<sp/>atan2(vel.m_x,<sp/>vel.m_z);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref><sp/>*=180/ngl::PI;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref><sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref>+=<sp/>360.0f;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>rotator(0,<ref refid="class_n_g_l_draw_1a12b8999652f44d992de74ed2fe10ef5b" kindref="member">m_rot</ref>,0);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_prevRot<sp/>=<sp/>comb;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>.setRotation(rotator);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>character<sp/>hits<sp/>the<sp/>box<sp/>then<sp/>it<sp/>will<sp/>apply<sp/>Disintegrate<sp/>shader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;dis_1&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/><sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;dis_2&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;dis_3&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>))</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>DEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1.0,0.0,0.0);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(620,250,</highlight><highlight class="stringliteral">&quot;DEAD&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Disintegrate&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,<sp/>0.5,<sp/>0.6),1,200,<sp/><sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1af307e10fea4e3d0500b0d97f406bf30b" kindref="member">resetLowThreshold</ref>();</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,<sp/>0.5,<sp/>0.6),1,200,<sp/><ref refid="class_n_g_l_draw_1aa5b3c36d5b66d33dd52f96db79d8b3e8" kindref="member">m_position</ref>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a24eb5a13796d850b994806d7dde79540" kindref="member">m_larryMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//fix<sp/>slopes<sp/>-<sp/>set<sp/>gravity<sp/>to<sp/>0<sp/>if<sp/>on<sp/>a<sp/>slope<sp/>to<sp/>prevent<sp/>sliding<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;detectCollisionForJump())</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setGravityForCharacter(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>,ngl::Vec3(0,(0),0));</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setGravityForCharacter(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>,ngl::Vec3(0,(-9.8*<ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>),0));</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.3,<sp/>0.15,<sp/>0.03),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw<sp/>level<sp/>meshes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a1718f004c68d6369c30ce97f37568729" kindref="member">m_level1Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a1d9c617a443d037e09b6c081fc1a004e" kindref="member">m_level2_1Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a9a9db52fc3f4009fb2ed6d3d3bcc18ce" kindref="member">m_level2_2Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//change<sp/>in<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(</highlight><highlight class="stringliteral">&quot;level_2_part_3a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.3,<sp/>0.15,<sp/>0.03),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a9e17d6d1fd9c2b56fb5c6eaf93f02b54" kindref="member">m_level2_3aMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//change<sp/>in<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(</highlight><highlight class="stringliteral">&quot;level_2_part_3b&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.3,<sp/>0.15,<sp/>0.03),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac244ab08b9f1de2fef2a4adc10915a33" kindref="member">m_level2_3bMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//change<sp/>in<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(</highlight><highlight class="stringliteral">&quot;level_3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.3,<sp/>0.15,<sp/>0.03),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a615507ccce3f3811712306431129f23a" kindref="member">m_level3Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//change<sp/>in<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(</highlight><highlight class="stringliteral">&quot;level_4_part_1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.3,<sp/>0.15,<sp/>0.03),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6e11331f5c471eb40c240fe48393001b" kindref="member">m_level4_1Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a7a1c0603f362e7d970540e4c40f668a1" kindref="member">m_level4_2Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,<sp/>1.0,<sp/>0.5),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1af9898b9333424acd82ec0010d7f51c4e" kindref="member">m_level5Stick</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.3,<sp/>0.15,<sp/>0.03),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac68796c07ab55611f5f45573206b6582" kindref="member">m_level5Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Finish&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,1.0,1.0),<sp/>0,600,<sp/><ref refid="class_n_g_l_draw_1aa5a4b3333ddcdf2f5839136448d9a39e" kindref="member">m_trans_level</ref>);<sp/></highlight><highlight class="comment">//checkerboard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa361867facb23c51e19c714ca019040b" kindref="member">m_finish</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw<sp/>buttons</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/>ngl::Transformation<sp/>button<sp/>=<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;getTransform(</highlight><highlight class="stringliteral">&quot;level_4_button_0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;level_4_button_0&quot;</highlight><highlight class="normal">,<sp/>name))</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>button.addPosition(0,-7,0);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.0,<sp/>0.0,<sp/>0.0),<sp/>0,600,<sp/>button);</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>button.addPosition(0,-6,0);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.7,<sp/>0.0,<sp/>0.0),<sp/>0,600,<sp/>button);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/>prim-&gt;draw(</highlight><highlight class="stringliteral">&quot;cube&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/>ngl::Transformation<sp/>button2<sp/>=<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;getTransform(</highlight><highlight class="stringliteral">&quot;level_4_button_1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>button2.addPosition(0,-7,0);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.0,<sp/>8.0,<sp/>0.0),<sp/>0,600,<sp/>button2);</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>button2.addPosition(0,-6,0);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.7,<sp/>0.0,<sp/>0.0),<sp/>0,600,<sp/>button2);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/>prim-&gt;draw(</highlight><highlight class="stringliteral">&quot;cube&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//m_level1_bouncePlatformMesh-&gt;draw();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//if<sp/>character<sp/>touches<sp/>the<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;death_1&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;death_2&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;death_3&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;death_4&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;bounds&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>==<sp/>false<sp/>)</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//freezes<sp/>then<sp/>resets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;freezeCharacter();</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;resetCharacter(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>,<sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;getInitialPos());</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;bridge01&quot;</highlight><highlight class="normal">,<sp/>-90);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;bridge02&quot;</highlight><highlight class="normal">,<sp/>90);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;setRot(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;rotatePlatform(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//trigger<sp/>to<sp/>un-clamp<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;ramp_1&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;ramp_2&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;ramp_3&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;uBendVel&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>))</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setClampFlag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//trigger<sp/>to<sp/>clamp<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;ramp_1_end&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;ramp_2_end&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_4&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>||</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_5&quot;</highlight><highlight class="normal">,<sp/>name))</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;<sp/>setClampFlag(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//trigger<sp/>to<sp/>speed<sp/>up<sp/>ball</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;ramp_3&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>))</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;<sp/>setClampFlag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;<sp/>speed(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>bounce<sp/>pad<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;bouncePad_01&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;bouncePad_02&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/><sp/>)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>force;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>force.set(0,100,0);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;setLinVelocity(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>,force);</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw<sp/>ground</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa34619a181832d97ed82fd483b5b7193" kindref="member">m_trans_grid</ref>.setPosition(0,-200,0);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Ground&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.93,<sp/>0.556,<sp/>0.14),<sp/>0,0,<sp/><ref refid="class_n_g_l_draw_1aa34619a181832d97ed82fd483b5b7193" kindref="member">m_trans_grid</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1aa34619a181832d97ed82fd483b5b7193" kindref="member">m_trans_grid</ref>.setScale(120.1,120.1,120.1);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/>prim-&gt;draw(</highlight><highlight class="stringliteral">&quot;grid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>name<sp/>of<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//get<sp/>camera<sp/>direction<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/>ngl::Vec4<sp/>dir(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1ae19b3c8112edf783476dd2197baa4a36" kindref="member">getLook</ref>()<sp/>-<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a3b565fb6a9ec8aab39fb5f57ee188a0d" kindref="member">getEye</ref>());</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setCameraInfo(dir);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;camTrigger&quot;</highlight><highlight class="normal">,<sp/>name))</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a7c68c706aa05e265b14a140d97a04b75" kindref="member">forcePos</ref>(name,<sp/>0);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;UBend&quot;</highlight><highlight class="normal">,<sp/>name))</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1abd7aa4cdc35c9c95203090bbd4a8279a" kindref="member">snapPos</ref>(name,<sp/>ngl::PI/2);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1ab65565a0e02bd33806d264c972ed083d" kindref="member">updatePos</ref>(name);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//button<sp/>triggers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a912b50c593789f4c008513bbfb501957" kindref="member">m_buttonCooldown</ref>--;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;level_4_button_0&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>&amp;&amp;<sp/><ref refid="class_n_g_l_draw_1a912b50c593789f4c008513bbfb501957" kindref="member">m_buttonCooldown</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<sp/>90);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a912b50c593789f4c008513bbfb501957" kindref="member">m_buttonCooldown</ref><sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//bridge<sp/>button<sp/>check<sp/>collision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;level_4_button_1&quot;</highlight><highlight class="normal">,<sp/>name)<sp/>&amp;&amp;<sp/><ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;bridge01&quot;</highlight><highlight class="normal">,<sp/>90);</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;bridge02&quot;</highlight><highlight class="normal">,<sp/>-90);</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a7c68c706aa05e265b14a140d97a04b75" kindref="member">forcePos</ref>(name,<sp/>ngl::PI/2);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a64a11237be8d57b468666cae99741864" kindref="member">setDistance</ref>(40);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//character<sp/>stuff//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;shiftTrigger_1&quot;</highlight><highlight class="normal">,<sp/>name)<sp/><sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;shiftTrigger_2&quot;</highlight><highlight class="normal">,<sp/>name))</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setShiftable(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setShiftable(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>moving<sp/>platforms<sp/>to<sp/>translate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;movingPlatform01&quot;</highlight><highlight class="normal">,10,10,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa7a40fd5b5569160d38c2328bf2fb5ed4" kindref="member">MOVE_X</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;movingPlatform02&quot;</highlight><highlight class="normal">,10,15,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4854e59b8a894a00ca5f9dda42bb475c" kindref="member">MOVE_Z</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;movingPlatform03&quot;</highlight><highlight class="normal">,10,25,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa7a40fd5b5569160d38c2328bf2fb5ed4" kindref="member">MOVE_X</ref>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;movingPlatform04&quot;</highlight><highlight class="normal">,10,40,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4854e59b8a894a00ca5f9dda42bb475c" kindref="member">MOVE_Z</ref>);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;barrierPlatform01&quot;</highlight><highlight class="normal">,5,9,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa7a40fd5b5569160d38c2328bf2fb5ed4" kindref="member">MOVE_X</ref>);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>bounce<sp/>platforms<sp/>to<sp/>zero<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;bouncePlatform01&quot;</highlight><highlight class="normal">,0,30,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa7a40fd5b5569160d38c2328bf2fb5ed4" kindref="member">MOVE_X</ref>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;movePlatform(</highlight><highlight class="stringliteral">&quot;bouncePlatform02&quot;</highlight><highlight class="normal">,0,30,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa7a40fd5b5569160d38c2328bf2fb5ed4" kindref="member">MOVE_X</ref>);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;rotatePlatform(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;rotatePlatform(</highlight><highlight class="stringliteral">&quot;bridge01&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;rotatePlatform(</highlight><highlight class="stringliteral">&quot;bridge02&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;freezeBody(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;freezeBody(</highlight><highlight class="stringliteral">&quot;bridge01&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;freezeBody(</highlight><highlight class="stringliteral">&quot;bridge02&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>draw<sp/>platforms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i:<ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;getPlatformList())</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getTransformMatrix(i-&gt;getPlatformName());</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getPlatType()<sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7addacb58043038c6070505710c73516c8" kindref="member">PlatType::MOVE_PLATE</ref>)</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.55,<sp/>1.4,<sp/>1.0),0,600,<sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ae2ac8ef6e024b3d17722bc2a6834ec77" kindref="member">m_platformMesh_platform</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getPlatType()<sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a089b531152ee4090896c6afa68e3fd31" kindref="member">PlatType::BOUNCE_PAD</ref>)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(0.099,<sp/>0.2,<sp/>0.1),0,600,<sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2564668f371aedc1e5ee2c56bf2441da" kindref="member">m_platformMesh_bouncePad</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getPlatType()<sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a6bf4e51ca30dba9c0f27ae31e6e78e91" kindref="member">PlatType::BARRIER01</ref>)</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.55,<sp/>1.4,<sp/>1.0),0,600,<sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a73ebf7484f9d663227ee2ffc8edc5edd" kindref="member">m_platformMesh_barrier01</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getPlatType()<sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a8a2a27fa0925406ded2322c372b89d86" kindref="member">PlatType::ROTATING_L</ref>)</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.55,<sp/>1.4,<sp/>1.0),0,600,<sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a84af750a20197acd58c50b3d6cad526a" kindref="member">m_level4RotPlatformMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getPlatType()<sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a3bdf1cb21c092d90f750f07e60af6410" kindref="member">PlatType::BRIDGE_1</ref>)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.55,<sp/>1.4,<sp/>1.0),0,600,<sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1af527b0abeed73c7e1d0fc2b26a6896b0" kindref="member">m_level4Bridge1Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getPlatType()<sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a3e6d430567f07a9658bf8b32003da464" kindref="member">PlatType::BRIDGE_2</ref>)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.55,<sp/>1.4,<sp/>1.0),0,600,<sp/><ref refid="class_n_g_l_draw_1a390b9ed4103e068eed78fedcbf4edae9" kindref="member">m_trans_platform</ref>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aed9b51e9e0d47a4ed83d5a3c5d9248c7" kindref="member">m_level4Bridge2Mesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>iterate<sp/>the<sp/>coinlist<sp/>and<sp/>draw<sp/>all<sp/>the<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i:<ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getCoins())</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a793a95d01d524833bc4a499821167dff" kindref="member">m_trans_coin</ref>.setMatrix(<ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a793a95d01d524833bc4a499821167dff" kindref="member">m_trans_coin</ref>.setPosition(i-&gt;getCoinPos());</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.4,<sp/>0.8,<sp/>0.05),0,5000,<sp/><ref refid="class_n_g_l_draw_1a793a95d01d524833bc4a499821167dff" kindref="member">m_trans_coin</ref>);</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>any<sp/><sp/>coins<sp/>have<sp/>hit<sp/>the<sp/>player</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((i-&gt;isCoinHit(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/>i-&gt;isCoinHit(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)))</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>contact<sp/>and<sp/>coinstate<sp/>is<sp/>still<sp/>active</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getCoinState()<sp/><sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>coin<sp/>state<sp/>to<sp/>0/dead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;setCoinState(0);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;addCoinScore(1);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>coin<sp/>is<sp/>0/dead<sp/>it<sp/>will<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i-&gt;getCoinState()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i-&gt;startTime();</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>timer<sp/>=<sp/>i-&gt;getTime();</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;time<sp/>&quot;<sp/>&lt;&lt;<sp/>timer<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1.4<sp/>+<sp/><ref refid="class_n_g_l_draw_1a5fd365ceef761c0f00f9ee81814e7c59" kindref="member">increaseCoinColour</ref>(),</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.8<sp/>+<sp/><ref refid="class_n_g_l_draw_1a5fd365ceef761c0f00f9ee81814e7c59" kindref="member">increaseCoinColour</ref>()<sp/>*0.7,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.05),</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,5000,<sp/><ref refid="class_n_g_l_draw_1a793a95d01d524833bc4a499821167dff" kindref="member">m_trans_coin</ref>);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//shaderType(&quot;Disintegrate&quot;,<sp/>ngl::Vec3(1.0,<sp/>0.7,<sp/>0.1<sp/>+<sp/>increaseCoinColour()),0,5000,<sp/>m_trans_coin);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((timer)<sp/>&gt;=<sp/>0.1)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;deleteCoin(i);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ae6223efa76b661563f20216adb4f474d" kindref="member">resetCoinColour</ref>();</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//draw<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aa883399a6be3eacc3bb79a2319b0fb0e" kindref="member">m_coinMesh</ref>-&gt;draw();</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a6c10720ed7392b885059ba5d06cc0fc8" kindref="member">m_bodyTransform</ref>.identity();</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>DRAW<sp/>TRIGGER<sp/>VOLUMES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a776ada75080f8a0e3672b2d18d06d789" kindref="member">m_debug</ref>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=0;<sp/>i&lt;<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;getTriggerListSize();<sp/>i++)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngl::VAOPrimitives<sp/>*prim=ngl::VAOPrimitives::instance();</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Transformation<sp/>triggerBox<sp/>=<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;getTransform(i);</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Object&quot;</highlight><highlight class="normal">,<sp/>ngl::Vec3(1,0,0),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>triggerBox);</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prim-&gt;draw(</highlight><highlight class="stringliteral">&quot;cube&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//render<sp/>debug<sp/>text<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1,1,1);</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0.005;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1,1,0);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>maxVel<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getMaxVelocity());</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>multi<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getMultiplier());</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>mass<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getMass()+0.5);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*2*<ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref>,0.04*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;Current<sp/>character:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//character<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref><sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref><sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getLinVelocity(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>gravityDir<sp/>=<sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getGravityDir();</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>posX<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref>.m_x);</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>posY<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref>.m_y);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>posZ<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref>.m_z);</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>velX<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref>.m_x);</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>velY<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref>.m_y);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>velZ<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref>.m_z);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>gravityDirX<sp/>=<sp/>std::to_string(gravityDir.m_x);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>gravityDirY<sp/>=<sp/>std::to_string(gravityDir.m_y);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>gravityDirZ<sp/>=<sp/>std::to_string(gravityDir.m_z);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1,0,0);</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.06*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1,1,0);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.08*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;POS:<sp/>[&quot;</highlight><highlight class="normal">+posX+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+posY+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+posZ+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.1*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;VEL:<sp/>[&quot;</highlight><highlight class="normal">+velX+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+velY+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+velZ+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.12*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;GRAVITY<sp/>DIR:<sp/>[&quot;</highlight><highlight class="normal">+gravityDirX+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+gravityDirY+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+gravityDirZ+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.14*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;GROUND<sp/>RAYTEST:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;detectCollisionForJump()));</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//character<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()==</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref><sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref><sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getLinVelocity(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>posX<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref>.m_x);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>posY<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref>.m_y);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>posZ<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a9215aaee79f1bb371bb29a8b4d47f46e" kindref="member">m_textPos</ref>.m_z);</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>velX<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref>.m_x);</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>velY<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref>.m_y);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>velZ<sp/>=<sp/>std::to_string(<ref refid="class_n_g_l_draw_1a00ece957ea5105cfee99f916c52600e0" kindref="member">m_textVel</ref>.m_z);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1,0,0);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.06*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1,1,0);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.08*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;POS:<sp/>[&quot;</highlight><highlight class="normal">+posX+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+posY+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+posZ+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.1*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;VEL:<sp/>[&quot;</highlight><highlight class="normal">+velX+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+velY+</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">+velZ+</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.12*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;GROUND<sp/>RAYTEST:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;detectCollisionForJump()));</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.16*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;DOUBLE<sp/>JUMP:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getDoubleJump()));</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(0.35,0.72,0.99);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.18*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;VEL<sp/>MAX<sp/>(Y<sp/>not<sp/>affected):<sp/>&quot;</highlight><highlight class="normal">+maxVel);</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.2*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;VEL<sp/>MULT:<sp/>&quot;</highlight><highlight class="normal">+multi);</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.22*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;MASS:<sp/>&quot;</highlight><highlight class="normal">+mass);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>objCount<sp/>=<sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getNumCollisionObjects();</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>objCounter<sp/>=<sp/>std::to_string(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(objCount));</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.24*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;Number<sp/>of<sp/>collision<sp/>objects:<sp/>&quot;</highlight><highlight class="normal">+objCounter);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(1.00,0.52,0.96);</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.26*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;B,N,M<sp/>-<sp/>to<sp/>debug<sp/>(draw<sp/>collision<sp/>shapes,<sp/>point,<sp/>poly)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;setColour(0,0.7,0);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.28*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;W,A,S,D,SPACE<sp/>-<sp/>to<sp/>move,<sp/>F<sp/>-<sp/>to<sp/>shapeshift&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.30*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;Keys:<sp/>1,2,3,4,5,6<sp/>-<sp/>(Add/Minus<sp/>mass,<sp/>maxVel,<sp/>multiplyVel)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0643100ba8287840812843c182383918" kindref="member">m_text</ref>-&gt;renderText(width*m_w,0.32*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;Keys:<sp/>7<sp/>-<sp/>Add<sp/>a<sp/>cube&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_triggerFactory-&gt;printTriggerList();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//finish<sp/>line<sp/>trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;finish&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;finish&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;finish&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;finish&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//print<sp/>THE<sp/>END</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;setHighScore();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;highScorePause();</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;setColour(0.0,1.0,0.0);</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;renderText(0.5*<ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref>,0.5*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;THE<sp/>END&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw<sp/>highscore<sp/>and<sp/>coin<sp/>score</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>score<sp/>=<sp/><ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;getScoreTime();</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>coins<sp/>=<sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getCoinScore();</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;setColour(1.0,1.0,0.0);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;renderText(0.7*<ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref>,0.06*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;High<sp/>Score:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<sp/>(<ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;getHighScore()<sp/>/1000/60)<sp/>%60)+</highlight><highlight class="stringliteral">&quot;<sp/>min<sp/>:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<sp/>(<ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;getHighScore()<sp/>/1000)%60)+</highlight><highlight class="stringliteral">&quot;<sp/>sec&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;renderText(0.7*<ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref>,0.1*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;Current<sp/>Time:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<sp/>((score<sp/>/1000)/60)<sp/>%60)+</highlight><highlight class="stringliteral">&quot;<sp/>min<sp/>:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(<sp/>(score<sp/>/1000)%60)+</highlight><highlight class="stringliteral">&quot;<sp/>sec&quot;</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;setColour(1.0,0.5,0.5);</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a0955ece2a8f0047dcb8d54c58ddf63f8" kindref="member">m_textHighscore</ref>-&gt;renderText(0.7*<ref refid="class_n_g_l_draw_1a5e3a79755300252f99c9c353fffd2407" kindref="member">m_w</ref>,0.15*<ref refid="class_n_g_l_draw_1ac5101cb66bb4c0a94c9a61f1600eea2e" kindref="member">m_h</ref>,</highlight><highlight class="stringliteral">&quot;COINS:<sp/>&quot;</highlight><highlight class="normal">+std::to_string(coins/3));</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//checking<sp/>if<sp/>character<sp/>is<sp/>on<sp/>a<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a4bdb4e0a938d843e85e12548085c1a51" kindref="member">m_level</ref>-&gt;checkpoints(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase());</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="class_n_g_l_draw_1a45a8557f4a2ef22ca853c08cd81c8f8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a45a8557f4a2ef22ca853c08cd81c8f8a" kindref="member">NGLDraw::createFramebufferObject</ref>()</highlight></codeline>
<codeline lineno="1193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>use<sp/>a<sp/>texture<sp/>depth<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_2D,<sp/><ref refid="class_n_g_l_draw_1adb5b6f9dfcb4b370b7c8503f0782a1bf" kindref="member">m_TextureID</ref>[0]);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//glTexParameteri(GL_TEXTURE_2D,<sp/>GL_GENERATE_MIPMAP,<sp/>GL_TRUE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MIN_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_MAG_FILTER,<sp/>GL_LINEAR);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/>glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_FUNC,<sp/>GL_LEQUAL);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//glTexParameteri(GL_TEXTURE_2D,<sp/>GL_DEPTH_TEXTURE_MODE,<sp/>GL_LUMINANCE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//glTexParameteri(GL_TEXTURE_2D,<sp/>GL_TEXTURE_COMPARE_MODE,<sp/>GL_COMPARE_R_TO_TEXTURE);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/>glTexParameterf(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_S,<sp/>GL_CLAMP_TO_EDGE<sp/>);</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/>glTexParameterf(<sp/>GL_TEXTURE_2D,<sp/>GL_TEXTURE_WRAP_T,<sp/>GL_CLAMP_TO_EDGE<sp/>);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/>glTexImage2D(<sp/>GL_TEXTURE_2D,<sp/>0,<sp/>GL_DEPTH_COMPONENT,<sp/><ref refid="_n_g_l_draw_8cpp_1a795c922bb6141b030644592fcffa850b" kindref="member">TEXTURE_WIDTH</ref>,<sp/><ref refid="_n_g_l_draw_8cpp_1adc64a996fed3c125c1e9f6c055ce644f" kindref="member">TEXTURE_HEIGHT</ref>,<sp/>0,<sp/>GL_DEPTH_COMPONENT,<sp/>GL_FLOAT,<sp/>0);</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//glBindTexture(GL_TEXTURE_2D,<sp/>0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>our<sp/>FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/>glGenFramebuffers(1,<sp/>&amp;<ref refid="class_n_g_l_draw_1adfd2f8c8485a8ec074f5f6e0275b8584" kindref="member">m_fboID</ref>);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/><ref refid="class_n_g_l_draw_1adfd2f8c8485a8ec074f5f6e0275b8584" kindref="member">m_fboID</ref>);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>Phong<sp/>and<sp/>read<sp/>buffers<sp/>as<sp/>we<sp/>only<sp/>want<sp/>depth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>glDrawBuffer(GL_NONE);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/>glReadBuffer(GL_NONE);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>attach<sp/>our<sp/>texture<sp/>to<sp/>the<sp/>FBO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/>glFramebufferTexture2D(GL_FRAMEBUFFER,<sp/>GL_DEPTH_ATTACHMENT,GL_TEXTURE_2D,<sp/><ref refid="class_n_g_l_draw_1adb5b6f9dfcb4b370b7c8503f0782a1bf" kindref="member">m_TextureID</ref>[0],<sp/>0);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>switch<sp/>back<sp/>to<sp/>window-system-provided<sp/>framebuffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/>glBindFramebuffer(GL_FRAMEBUFFER,<sp/>0);</highlight></codeline>
<codeline lineno="1226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228" refid="class_n_g_l_draw_1a7950c9e9bfd16dc9b6075881396df876" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a7950c9e9bfd16dc9b6075881396df876" kindref="member">NGLDraw::mouseMoveEvent</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SDL_MouseMotionEvent<sp/>&amp;_event)</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1ae6da031d343135a463a5aa4892447d78" kindref="member">m_rotate</ref>)</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>diffx=_event.x-<ref refid="class_n_g_l_draw_1ace86944ed1a9a70325f685e4d5e4a795" kindref="member">m_origX</ref>;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>diffy=_event.y-<ref refid="class_n_g_l_draw_1a00a59d797594150f054bb7c5c83435bc" kindref="member">m_origY</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>camera&apos;s<sp/>angle<sp/>and<sp/>height<sp/>based<sp/>on<sp/>the<sp/>difference<sp/>in<sp/>mouse<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a60d0c53628aa3654b64eb1bc8beb1e28" kindref="member">setAngle</ref>(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1aeb2fffe048b65431de6b2beccdb34135" kindref="member">getAngle</ref>()<sp/>+<sp/>diffx/(ngl::PI*30.0f));</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a1ccc13246c520c77b09f680bd5bfaf86" kindref="member">setHeight</ref>(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a6aa244c08427100da9e8ea5b2fa88cd8" kindref="member">getHeight</ref>()<sp/>+<sp/>diffy/8);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a00a59d797594150f054bb7c5c83435bc" kindref="member">m_origY</ref><sp/>=<sp/>_event.y;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ace86944ed1a9a70325f685e4d5e4a795" kindref="member">m_origX</ref><sp/>=<sp/>_event.x;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244" refid="class_n_g_l_draw_1a1b20896f4aac3cddd5ea2f977410a19f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a1b20896f4aac3cddd5ea2f977410a19f" kindref="member">NGLDraw::mousePressEvent</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SDL_MouseButtonEvent<sp/>&amp;_event)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>method<sp/>is<sp/>called<sp/>when<sp/>the<sp/>mouse<sp/>button<sp/>is<sp/>pressed<sp/>in<sp/>this<sp/>case<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>store<sp/>the<sp/>value<sp/>where<sp/>the<sp/>maouse<sp/>was<sp/>clicked<sp/>(x,y)<sp/>and<sp/>set<sp/>the<sp/>Rotate<sp/>flag<sp/>to<sp/>true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_event.button<sp/>==<sp/>SDL_BUTTON_LEFT)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ace86944ed1a9a70325f685e4d5e4a795" kindref="member">m_origX</ref><sp/>=<sp/>_event.x;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a00a59d797594150f054bb7c5c83435bc" kindref="member">m_origY</ref><sp/>=<sp/>_event.y;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ae6da031d343135a463a5aa4892447d78" kindref="member">m_rotate</ref><sp/>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257" refid="class_n_g_l_draw_1aa41eba2e6fd12011cdd62a7db8f7f84e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1aa41eba2e6fd12011cdd62a7db8f7f84e" kindref="member">NGLDraw::mouseReleaseEvent</ref><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SDL_MouseButtonEvent<sp/>&amp;_event)</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>event<sp/>is<sp/>called<sp/>when<sp/>the<sp/>mouse<sp/>button<sp/>is<sp/>released</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>then<sp/>set<sp/>Rotate<sp/>to<sp/>false</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_event.button<sp/>==<sp/>SDL_BUTTON_LEFT)</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1ae6da031d343135a463a5aa4892447d78" kindref="member">m_rotate</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268" refid="class_n_g_l_draw_1a8782a682c3a362baa3b18882f49c95ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a8782a682c3a362baa3b18882f49c95ed" kindref="member">NGLDraw::wheelEvent</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>SDL_MouseWheelEvent<sp/>&amp;_event)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>diff<sp/>of<sp/>the<sp/>wheel<sp/>position<sp/>(0<sp/>means<sp/>no<sp/>change)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_event.y<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a64a11237be8d57b468666cae99741864" kindref="member">setDistance</ref>(<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">getDistance</ref>()+<ref refid="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" kindref="member">ZOOM</ref>);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_event.y<sp/>&lt;0<sp/>)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a64a11237be8d57b468666cae99741864" kindref="member">setDistance</ref>(<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">getDistance</ref>()-<ref refid="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" kindref="member">ZOOM</ref>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>the<sp/>diff<sp/>of<sp/>the<sp/>wheel<sp/>position<sp/>(0<sp/>means<sp/>no<sp/>change)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_event.x<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a64a11237be8d57b468666cae99741864" kindref="member">setDistance</ref>(<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">getDistance</ref>()-<ref refid="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" kindref="member">ZOOM</ref>);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_event.x<sp/>&lt;0<sp/>)</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1a64a11237be8d57b468666cae99741864" kindref="member">setDistance</ref>(<sp/><ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>-&gt;<ref refid="class_camera_1acfdfc9d8b5b2ac82108a5c538aca8f83" kindref="member">getDistance</ref>()+<ref refid="_n_g_l_draw_8cpp_1ad53f4ea4bad2000e469a9b538c39878f" kindref="member">ZOOM</ref>);</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292" refid="class_n_g_l_draw_1a21c11b65d353b76a7cc984db69aad208" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a21c11b65d353b76a7cc984db69aad208" kindref="member">NGLDraw::updateDraw</ref>()</highlight></codeline>
<codeline lineno="1293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//draw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/>this-&gt;<ref refid="class_n_g_l_draw_1aec8a377329da67db1e2ef007bd27f026" kindref="member">draw</ref>();</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297" refid="class_n_g_l_draw_1a16334df95f8d9a51532f3338917e5f15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a16334df95f8d9a51532f3338917e5f15" kindref="member">NGLDraw::updateDebugDraw</ref>()</highlight></codeline>
<codeline lineno="1298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a776ada75080f8a0e3672b2d18d06d789" kindref="member">m_debug</ref>==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a2d79c02d374ba7dd3db79f3c7058106c" kindref="member">shaderType</ref>(</highlight><highlight class="stringliteral">&quot;Debug&quot;</highlight><highlight class="normal">,<sp/><sp/>ngl::Vec3(0.0,<sp/>0.0,<sp/>0.0),0,0,<sp/><ref refid="class_n_g_l_draw_1a1dd6ea75ab42c455ad7a1bb2d02dd702" kindref="member">m_empty_trans</ref>);</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;debugWorldDraw();</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305" refid="class_n_g_l_draw_1aff9b0a8ebb90014106a76476ea9e66a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1aff9b0a8ebb90014106a76476ea9e66a5" kindref="member">NGLDraw::updatePhysics</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>time)</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//used<sp/>for<sp/>stickiness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>true<sp/>enable<sp/>stickiness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_1&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_2&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_3&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_4&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)||</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_5&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_6&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>))</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;attractForce(<ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>,5,<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setAttractFlag(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>stickiness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setAttractFlag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_1&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_2&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_3&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_4&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_5&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>)<sp/>||<sp/><ref refid="class_n_g_l_draw_1aee3dd61984630269553fcbeb90b29661" kindref="member">m_triggerFactory</ref>-&gt;checkPairHit(</highlight><highlight class="stringliteral">&quot;stick_6&quot;</highlight><highlight class="normal">,<sp/><ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>))</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//disable<sp/>stickiness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;setAttractFlag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;attractForce(<ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>,5,<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//m_level-&gt;movePlatform(4,120,<sp/>15,<sp/>LEFTRIGHT,<sp/>&quot;movingPlatform01&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;step(time<sp/>-<sp/><ref refid="class_n_g_l_draw_1a535f8a8f46457bfc8fd3f8d160c1fbe7" kindref="member">m_lastTime</ref>,<sp/>12,<sp/>1.0f/360.0f);</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a535f8a8f46457bfc8fd3f8d160c1fbe7" kindref="member">m_lastTime</ref><sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336" refid="class_n_g_l_draw_1a097605c7ddb2f1db44a775b7ce331cbf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a097605c7ddb2f1db44a775b7ce331cbf" kindref="member">NGLDraw::debugPhysicsWorld</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>_value)</highlight></codeline>
<codeline lineno="1337"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>debug<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a776ada75080f8a0e3672b2d18d06d789" kindref="member">m_debug</ref><sp/>=<sp/>_value;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_value==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;Shapes<sp/>map&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a577a537932f6650525bd52937ed597ab" kindref="member">printShapeMap</ref>();</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;m_physics<sp/>bodies&quot;</highlight><highlight class="normal">&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;printBodies();</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350" refid="class_n_g_l_draw_1a68a2ef17374b678bc6bae8ea72a06648" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a68a2ef17374b678bc6bae8ea72a06648" kindref="member">NGLDraw::increaseShaderTime</ref>()</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a00dfb0a354b5bac98353ca30d43241e3" kindref="member">m_time</ref><sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355" refid="class_n_g_l_draw_1aefaec57ef590fe45fe33b4682a3f57ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1aefaec57ef590fe45fe33b4682a3f57ae" kindref="member">NGLDraw::addCube</ref>()</highlight></codeline>
<codeline lineno="1356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>pos;</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/>ngl::Random<sp/>*rng=ngl::Random::instance();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/>ngl::Vec3<sp/>posRNG=rng-&gt;getRandomVec3();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()==</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a68785741170c1282d997b733507d8ee2" kindref="member">m_formOne</ref>);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos+=posRNG*6;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;getPhase()==</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos=<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;getPosition(<ref refid="class_n_g_l_draw_1a96976c4a72285b6c10df3782bb22d3a3" kindref="member">m_formTwo</ref>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos+=posRNG*6;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/>pos.m_y=20;</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;addBox(</highlight><highlight class="stringliteral">&quot;cube&quot;</highlight><highlight class="normal">,pos);</highlight></codeline>
<codeline lineno="1372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375" refid="class_n_g_l_draw_1a88e7c60d00d0221df2eb523b94210d90" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a88e7c60d00d0221df2eb523b94210d90" kindref="member">NGLDraw::setGravityFactorPositive</ref>()</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref><sp/>+=1.0f;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;setGravity(ngl::Vec3(0,(-9.8*<ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>),0));</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="class_n_g_l_draw_1af286740f4b8d4483a0f71b1c248dee18" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1af286740f4b8d4483a0f71b1c248dee18" kindref="member">NGLDraw::setGravityFactorNegative</ref>()</highlight></codeline>
<codeline lineno="1382"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref><sp/>-=1.0f;</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>-&gt;setGravity(ngl::Vec3(0,(-9.8*<ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>),0));</highlight></codeline>
<codeline lineno="1385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387" refid="class_n_g_l_draw_1ad800ac2dbe66fee44e408184442e5e45" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1ad800ac2dbe66fee44e408184442e5e45" kindref="member">NGLDraw::getGravityFactor</ref>(){</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a402d4fe10bd277d17bd328e8fa5a7e3e" kindref="member">m_gravityFactor</ref>;</highlight></codeline>
<codeline lineno="1390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392" refid="class_n_g_l_draw_1a8e81bbf82286d1c4235abd6f04f24de9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a8e81bbf82286d1c4235abd6f04f24de9" kindref="member">NGLDraw::restartGame</ref>()</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a216948771a743b6dda1327a7c0f01835" kindref="member">m_character</ref>-&gt;resetCharacter(<ref refid="class_n_g_l_draw_1a67dfa0faca76aaa9e863d8b077128122" kindref="member">m_cam</ref>,<sp/>ngl::Vec3<sp/>(45,3,0));</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>reset<sp/>score,<sp/>coins,<sp/>checkpoints,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1397" refid="class_n_g_l_draw_1a06c2f1b75f43f42de5a7922e16b3a4f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_n_g_l_draw_1a06c2f1b75f43f42de5a7922e16b3a4f3" kindref="member">NGLDraw::restartGameValues</ref>()</highlight></codeline>
<codeline lineno="1398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1ac3eea11b312b5b1dc082b884dd2fcca2" kindref="member">m_highScore</ref>-&gt;highScoreStart();</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>the<sp/>number<sp/>of<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>coin:<sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getCoins())</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>coins<sp/>through<sp/>the<sp/>coin<sp/>factory,<sp/>assigning<sp/>the<sp/>correct<sp/>position<sp/>from<sp/>the<sp/>coinPosList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;deleteCoin(coin);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>loop<sp/>through<sp/>the<sp/>number<sp/>of<sp/>coins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getNumCoins();<sp/>i++)</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>coins<sp/>through<sp/>the<sp/>coin<sp/>factory,<sp/>assigning<sp/>the<sp/>correct<sp/>position<sp/>from<sp/>the<sp/>coinPosList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;createCoin(<ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;getCoinPos(i),std::to_string(i),<ref refid="class_n_g_l_draw_1a766163f12ecc93fe1cdfe08a1e19585a" kindref="member">m_physics</ref>.get());</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//reset<sp/>the<sp/>bridge<sp/>and<sp/>rot<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref><sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;bridge01&quot;</highlight><highlight class="normal">,<sp/>-90);</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;addRot(</highlight><highlight class="stringliteral">&quot;bridge02&quot;</highlight><highlight class="normal">,<sp/>90);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_n_g_l_draw_1a4e8baf537f37fbc2623ba08b4028ace4" kindref="member">m_bridgeDown</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;setRot(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<sp/>0);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a02f2d78ce539285777c35fcf0d53a4a6" kindref="member">m_platformFactory</ref>-&gt;rotatePlatform(</highlight><highlight class="stringliteral">&quot;rotatingPlatform01&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><ref refid="class_n_g_l_draw_1a63883e107ea8c44073e1255c62b90b1e" kindref="member">m_coinFactory</ref>-&gt;setCoinScore();</highlight></codeline>
<codeline lineno="1422"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/NGLDraw.cpp"/>
  </compounddef>
</doxygen>
