<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="_platform_8cpp" kind="file">
    <compoundname>Platform.cpp</compoundname>
    <includes refid="_platform_8h" local="yes">Platform.h</includes>
    <incdepgraph>
      <node id="2442">
        <label>Ltimer.h</label>
        <link refid="_ltimer_8h"/>
        <childnode refid="2443" relation="include">
        </childnode>
      </node>
      <node id="2443">
        <label>SDL.h</label>
      </node>
      <node id="2440">
        <label>ngl/Types.h</label>
      </node>
      <node id="2435">
        <label>BulletDebugDraw.h</label>
        <link refid="_bullet_debug_draw_8h"/>
        <childnode refid="2436" relation="include">
        </childnode>
        <childnode refid="2437" relation="include">
        </childnode>
        <childnode refid="2430" relation="include">
        </childnode>
      </node>
      <node id="2426">
        <label>Platform.cpp</label>
        <link refid="Platform.cpp"/>
        <childnode refid="2427" relation="include">
        </childnode>
      </node>
      <node id="2438">
        <label>CollisionShape.h</label>
        <link refid="_collision_shape_8h"/>
        <childnode refid="2429" relation="include">
        </childnode>
        <childnode refid="2439" relation="include">
        </childnode>
        <childnode refid="2433" relation="include">
        </childnode>
        <childnode refid="2440" relation="include">
        </childnode>
        <childnode refid="2441" relation="include">
        </childnode>
      </node>
      <node id="2441">
        <label>string</label>
      </node>
      <node id="2427">
        <label>Platform.h</label>
        <link refid="_platform_8h"/>
        <childnode refid="2428" relation="include">
        </childnode>
        <childnode refid="2438" relation="include">
        </childnode>
        <childnode refid="2442" relation="include">
        </childnode>
      </node>
      <node id="2432">
        <label>ngl/Obj.h</label>
      </node>
      <node id="2437">
        <label>vector</label>
      </node>
      <node id="2431">
        <label>ngl/Mat4.h</label>
      </node>
      <node id="2439">
        <label>unordered_map</label>
      </node>
      <node id="2429">
        <label>btBulletDynamicsCommon.h</label>
      </node>
      <node id="2436">
        <label>LinearMath/btIDebugDraw.h</label>
      </node>
      <node id="2434">
        <label>set</label>
      </node>
      <node id="2430">
        <label>ngl/Vec3.h</label>
      </node>
      <node id="2433">
        <label>memory</label>
      </node>
      <node id="2428">
        <label>PhysicsWorld.h</label>
        <link refid="_physics_world_8h"/>
        <childnode refid="2429" relation="include">
        </childnode>
        <childnode refid="2430" relation="include">
        </childnode>
        <childnode refid="2431" relation="include">
        </childnode>
        <childnode refid="2432" relation="include">
        </childnode>
        <childnode refid="2433" relation="include">
        </childnode>
        <childnode refid="2434" relation="include">
        </childnode>
        <childnode refid="2435" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_platform_8h" kindref="compound">Platform.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4" refid="class_platform_1ab56212b4a4cdc789e1b276c99b7effef" refkind="member"><highlight class="normal"><ref refid="class_platform_1ab56212b4a4cdc789e1b276c99b7effef" kindref="member">Platform::Platform</ref>(ngl::Vec3<sp/>_pos,<sp/>std::string<sp/>_platName,<ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7" kindref="member">PlatType</ref><sp/>_platType,<sp/><ref refid="class_physics_world" kindref="compound">PhysicsWorld</ref><sp/>*_physics)</highlight></codeline>
<codeline lineno="5"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>initialize<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref><sp/>=<sp/>_pos;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref><sp/>=<sp/>_platName;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref><sp/>=<sp/>_physics;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>=<sp/>_platType;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a72aaca03b730ed78135f360b519c3ac5" kindref="member">m_deg</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>import<sp/>mesh<sp/>as<sp/>collision<sp/>shape<sp/>based<sp/>on<sp/>which<sp/>type<sp/>is<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7addacb58043038c6070505710c73516c8" kindref="member">PlatType::MOVE_PLATE</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,</highlight><highlight class="stringliteral">&quot;models/platform_mesh.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a089b531152ee4090896c6afa68e3fd31" kindref="member">PlatType::BOUNCE_PAD</ref>)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,</highlight><highlight class="stringliteral">&quot;models/level_1_bounce_platform.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a6bf4e51ca30dba9c0f27ae31e6e78e91" kindref="member">PlatType::BARRIER01</ref>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,</highlight><highlight class="stringliteral">&quot;models/barrier_01.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7abb9b1fc2ea7b2a38f0fbf3971a456fa4" kindref="member">PlatType::BARRIER_LARGE</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,</highlight><highlight class="stringliteral">&quot;models/barrier_01.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a8a2a27fa0925406ded2322c372b89d86" kindref="member">PlatType::ROTATING_L</ref>)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;models/level_4_rotating_platform.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a3bdf1cb21c092d90f750f07e60af6410" kindref="member">PlatType::BRIDGE_1</ref>)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;models/level_4_bridge_half.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref><sp/>==<sp/><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7a3e6d430567f07a9658bf8b32003da464" kindref="member">PlatType::BRIDGE_2</ref>)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_collision_shape" kindref="compound">CollisionShape</ref><sp/>*shapes=<ref refid="class_collision_shape_1a419073488476916f9dba2dd97ae2bf76" kindref="member">CollisionShape::instance</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes-&gt;<ref refid="class_collision_shape_1a3da0cfb413abcabe3195479a61df6344" kindref="member">addMesh</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,<sp/></highlight><highlight class="stringliteral">&quot;models/level_4_bridge_half2.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_platform_1a929d8b9fcdbc32332673d8d48540b909" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_platform_1a929d8b9fcdbc32332673d8d48540b909" kindref="member">Platform::createPlatform</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>the<sp/>collision<sp/>shape<sp/>to<sp/>the<sp/>physics<sp/>world</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a59cd5dbd3e7791bd23db032bcc64c202" kindref="member">addPlatform</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,<ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>,1,ngl::Vec3(0,0,0));</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="class_platform_1a3023de66e2e7b4b4e792f9f7e1e01a4d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_platform_1a3023de66e2e7b4b4e792f9f7e1e01a4d" kindref="member">Platform::addRot</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_deg)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>adds<sp/>the<sp/>specified<sp/>angle<sp/>to<sp/>the<sp/>total<sp/>degrees<sp/>left<sp/>to<sp/>turn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a72aaca03b730ed78135f360b519c3ac5" kindref="member">m_deg</ref><sp/>+=<sp/>_deg;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_platform_1ab31ff211a1657000b081af0bc14e3a87" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_platform_1ab31ff211a1657000b081af0bc14e3a87" kindref="member">Platform::setRot</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>_rot)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref><sp/>=<sp/>_rot;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="class_platform_1a126ca5dbffe1f3f908a00fcbd5eaa72c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_platform_1a126ca5dbffe1f3f908a00fcbd5eaa72c" kindref="member">Platform::rotatePlatform</ref>(std::string<sp/>_axis)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//only<sp/>change<sp/>angle<sp/>if<sp/>m_deg<sp/>is<sp/>not<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>ngl::Mat4<sp/>trans<sp/>=<sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1acef2efa13c576073a2a907709114422d" kindref="member">getTransformMatrix</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>m_deg<sp/>is<sp/>negative,<sp/>decrement<sp/>m_rot<sp/>and<sp/>increment<sp/>m_deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_platform_1a72aaca03b730ed78135f360b519c3ac5" kindref="member">m_deg</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a72aaca03b730ed78135f360b519c3ac5" kindref="member">m_deg</ref>++;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref>--;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>increment<sp/>m_rot<sp/>and<sp/>decrement<sp/>m_deg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_platform_1a72aaca03b730ed78135f360b519c3ac5" kindref="member">m_deg</ref><sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a72aaca03b730ed78135f360b519c3ac5" kindref="member">m_deg</ref>--;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref>++;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>depending<sp/>on<sp/>which<sp/>axis<sp/>is<sp/>specified,<sp/>set<sp/>the<sp/>rotation<sp/>in<sp/>the<sp/>transformation<sp/>matrix<sp/>to<sp/>m_rot</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_axis<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trans.rotateX(<ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_axis<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trans.rotateY(<ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_axis<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>trans.rotateZ(<ref refid="class_platform_1ac3b79afd448ae2587b2fc24f68e24c70" kindref="member">m_rot</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a59241bfca0313e9d049f55f546e6b184" kindref="member">setTransformMatrix</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,<sp/>trans);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_platform_1a4267f5b2b2e9505c7375dcda9af1749e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_platform_1a4267f5b2b2e9505c7375dcda9af1749e" kindref="member">Platform::movePlatform</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_vel,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>_range,<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aa" kindref="member">Direction</ref><sp/>_d)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>depending<sp/>on<sp/>which<sp/>Direction<sp/>is<sp/>chosen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_d<sp/>==<sp/><ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa7a40fd5b5569160d38c2328bf2fb5ed4" kindref="member">MOVE_X</ref><sp/>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>currentPos<sp/>=<sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>current<sp/>position<sp/>is<sp/>outside<sp/>the<sp/>range,<sp/>change<sp/>Direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPos[0]<sp/>-<sp/>_range<sp/>&gt;=<sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>[0])</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPos[0]<sp/>+<sp/>_range<sp/>&lt;=<sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>[0])</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>platform&apos;s<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>platformMove(<ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref>*_vel,0,0);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a73a5f631224e1486c7d6343f0a148ac0" kindref="member">setLinVelocity</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,platformMove);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_d<sp/>==<sp/><ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa2759e3c2bb672243131899864a890d33" kindref="member">MOVE_Y</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>currentPos<sp/>=<sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>current<sp/>position<sp/>is<sp/>outside<sp/>the<sp/>range,<sp/>change<sp/>Direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPos[1]<sp/>-<sp/>_range<sp/>&gt;=<sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>[1])</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPos[1]<sp/>+<sp/>_range<sp/>&lt;=<sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>[1])</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>platform&apos;s<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>platformMove(0,<ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref>*_vel,0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a73a5f631224e1486c7d6343f0a148ac0" kindref="member">setLinVelocity</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,platformMove);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(_d<sp/>==<ref refid="_platform_8h_1a224b9163917ac32fc95a60d8c1eec3aaa4854e59b8a894a00ca5f9dda42bb475c" kindref="member">MOVE_Z</ref>)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>currentPos<sp/>=<sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>current<sp/>position<sp/>is<sp/>outside<sp/>the<sp/>range,<sp/>change<sp/>Direction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPos[2]<sp/>-<sp/>_range<sp/>&gt;=<sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>[2])</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(currentPos[2]<sp/>+<sp/>_range<sp/>&lt;=<sp/><ref refid="class_platform_1a7af270e5bfd69bafe5ec3bee95799995" kindref="member">m_pos</ref>[2])</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>the<sp/>platform&apos;s<sp/>velocity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ngl::Vec3<sp/>platformMove(0,0,<ref refid="class_platform_1a7b0fcc983d9516ef1883981d63c0d842" kindref="member">m_platformDirection</ref>*_vel);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a73a5f631224e1486c7d6343f0a148ac0" kindref="member">setLinVelocity</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>,platformMove);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="class_platform_1ab6f1873ee4d7bb018c9b0706f813c270" refkind="member"><highlight class="normal">ngl::Vec3<sp/><ref refid="class_platform_1ab6f1873ee4d7bb018c9b0706f813c270" kindref="member">Platform::getPlatformPos</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_platform_1a07e29ba185c9fb787212a7d11af3832b" kindref="member">m_physics</ref>-&gt;<ref refid="class_physics_world_1a692161a381b2015cba102b08c02f6c3f" kindref="member">getPosition</ref>(<ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_platform_1a8e6cb1d96d29cf91025a2e158c020884" refkind="member"><highlight class="normal">std::string<sp/><ref refid="class_platform_1a8e6cb1d96d29cf91025a2e158c020884" kindref="member">Platform::getPlatformName</ref>()</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_platform_1ac7aa1bf8aaea0e87cdbe6f27e2375587" kindref="member">m_platName</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="class_platform_1a84f1f7d90e6e016ff71984a1b1147258" refkind="member"><highlight class="normal"><ref refid="_platform_8h_1a2799f626fb1480c1af15c2bf3096cac7" kindref="member">PlatType</ref><sp/><ref refid="class_platform_1a84f1f7d90e6e016ff71984a1b1147258" kindref="member">Platform::getPlatType</ref>()</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_platform_1a2cbeeb0dc477da86983368fd2cb8baf2" kindref="member">m_platType</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/i7257092/may_01/night_master/LevelHeadsCVA3/src/Platform.cpp"/>
  </compounddef>
</doxygen>
