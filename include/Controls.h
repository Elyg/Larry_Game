#ifndef CONTROLS_H
#define CONTROLS_H

#include "NGLDraw.h"
#include "PhysicsWorld.h"
//------------------------------------------------------------------------------------------------------------------------
/// @file Controls.h
/// @author Eligijus Titas,
/// @version 1.0
/// @class Controls
/// @brief A wrapper class for all of the controls for the character of the game
//-------------------------------------------------------------------------------------------------------------------------
class Controls
{
  public:
    //---------------------------------------------------------------------------------------------------------------------
    /// @brief ctor for Controls  class
    /// @param [in] _physics A pointer to the game physics world
    //----------------------------------------------------------------------------------------------------------------------
    Controls(PhysicsWorld *_physics,Character *_character);
    //---------------------------------------------------------------------------------------------------------------------
    /// @brief increments the mass of the object
    //----------------------------------------------------------------------------------------------------------------------
    void setMassPositive();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrements the mass of the object
    //----------------------------------------------------------------------------------------------------------------------
    void setMassNegative();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief increments the max velocity of the object
    //----------------------------------------------------------------------------------------------------------------------
    void setMaxVelPositive();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrements the max velocity of the object
    //----------------------------------------------------------------------------------------------------------------------
    void setMaxVelNegative();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief increments the multiplier for velocity of the object
    //----------------------------------------------------------------------------------------------------------------------
    void setMultiplierPositive();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrements the multiplier for velocity of the object
    //----------------------------------------------------------------------------------------------------------------------
    void setMultiplierNegative();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief applies a jump impulse to the character
    //----------------------------------------------------------------------------------------------------------------------
    void jumpImpulse();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief stops the jump hop timer
    //----------------------------------------------------------------------------------------------------------------------
    void stopJumpHopTimer();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief starts the jump hop timer
    //----------------------------------------------------------------------------------------------------------------------
    void startJumpHopTimer();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief disables gravity (cheat mode, shapeshift to re-enable gravity)
    //----------------------------------------------------------------------------------------------------------------------
    void godMode();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief shapeshifts the character into a ball/ball with legs
    //----------------------------------------------------------------------------------------------------------------------
    void shapeshift();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief moves the character based on the direction vector
    /// @param [in] _move the direction vector for the character
    //----------------------------------------------------------------------------------------------------------------------
    void characterMovement(ngl::Vec3 &_move);
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief increments the jump force value
    //----------------------------------------------------------------------------------------------------------------------
    void setJumpForcePositive();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrements the jump force value
    //----------------------------------------------------------------------------------------------------------------------
    void setJumpForceNegative();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief increments the max jump time
    //----------------------------------------------------------------------------------------------------------------------
    void setJumpHopMaxTimePositive();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrements the max jump time
    //----------------------------------------------------------------------------------------------------------------------
    void setJumpHopMaxTimeNegative();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief increments the characters friction
    //----------------------------------------------------------------------------------------------------------------------
    void setFrictionPositive();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief decrements the characters friction
    //----------------------------------------------------------------------------------------------------------------------
    void setFrictionNegative();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the mass of the character
    //----------------------------------------------------------------------------------------------------------------------
    float getMass();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the max velocity of the character
    //----------------------------------------------------------------------------------------------------------------------
    float getMaxVelocity();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the multiplier value of the character
    //----------------------------------------------------------------------------------------------------------------------
    float getMultiplier();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the friction value
    //----------------------------------------------------------------------------------------------------------------------
    float getFriction();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the jump force
    //----------------------------------------------------------------------------------------------------------------------
    float getJumpForce();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the jump hop time
    //----------------------------------------------------------------------------------------------------------------------
    float getJumpHopTime();
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief returns the maximum hop time
    //----------------------------------------------------------------------------------------------------------------------
    int getJumpHopMaxTime();
  private:
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief a pointer used to hold the physics world pointer to acces the physics world of the game
    //----------------------------------------------------------------------------------------------------------------------
    PhysicsWorld *m_physics;
    //----------------------------------------------------------------------------------------------------------------------
    /// @brief a pointer used to hold the character
    //----------------------------------------------------------------------------------------------------------------------
    Character *m_character;
};

#endif // CONTROLS_H
